on:
  push:
    branches:
      - main
name: release-please-pr
jobs:
  release-pr:
    runs-on: ubuntu-latest
    steps:
      - uses: google-github-actions/release-please-action@v3
        id: release-please
        with:
          release-type: node
          package-name: "react-daisyui"
          changelog-types: '[{"type":"feat","section":"Features","hidden":false},{"type":"fix","section":"Bug Fixes","hidden":false},{"type":"chore","section":"Miscellaneous","hidden":false},{"type":"refactor","section":"Miscellaneous","hidden":false},{"type":"docs","section":"Storybook","hidden":true}]'
          command: release-pr
      - uses: actions/github-script@v5
        if: ${{ steps.release-please.outputs.pr }}
        id: extract-branch
        env:
          PR: ${{ steps.release-please.outputs.pr }}
        with:
          result-encoding: string
          script: return JSON.parse(process.env.PR).headBranchName
      - uses: actions/checkout@v3
        if: ${{ steps.release-please.outputs.pr }}
        with:
          ref: ${{ steps.extract-branch.outputs.result }}
      - run: npm config set '//registry.npmjs.org/:_authToken' "${NPM_TOKEN}" && npm ci
        if: ${{ steps.release-please.outputs.pr }}
      - run: npm run docs
        if: ${{ steps.release-please.outputs.pr }}
      - uses: stefanzweifel/git-auto-commit-action@v4
        if: ${{ steps.release-please.outputs.pr }}
        with:
          commit_message: "docs: update storybook for latest release"

  release:
    runs-on: ubuntu-latest
    steps:
      - uses: google-github-actions/release-please-action@v3
        id: release
        with:
          release-type: node
          package-name: "react-daisyui"
          command: github-release
      - uses: actions/checkout@v3
        if: ${{ steps.release.outputs.release_created }}
      - uses: actions/setup-node@v3
        with:
          node-version: '17.x'
        if: ${{ steps.release.outputs.release_created }}
      - run: npm config set '//registry.npmjs.org/:_authToken' "${NPM_TOKEN}" && npm ci
        if: ${{ steps.release.outputs.release_created }}
      - run: npm config set '//registry.npmjs.org/:_authToken' "${NPM_TOKEN}" && npm publish
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        if: ${{ steps.release.outputs.release_created }}