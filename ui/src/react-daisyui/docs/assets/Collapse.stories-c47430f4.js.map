{"version":3,"file":"Collapse.stories-c47430f4.js","sources":["../../src/Collapse/Collapse.tsx"],"sourcesContent":["import React, { useRef, useState } from 'react'\nimport clsx from 'clsx'\nimport { twMerge } from 'tailwind-merge'\n\nimport { IComponentBaseProps } from '../types'\n\nimport CollapseTitle from './CollapseTitle'\nimport CollapseContent from './CollapseContent'\n\nexport type CollapseProps = React.HTMLAttributes<HTMLDivElement> &\n  IComponentBaseProps & {\n    checkbox?: boolean\n    icon?: 'arrow' | 'plus'\n    open?: boolean\n    onOpen?: () => void\n    onClose?: () => void\n    onToggle?: () => void\n  }\n\nconst Collapse = React.forwardRef<HTMLDivElement, CollapseProps>(\n  (\n    {\n      children,\n      checkbox,\n      icon,\n      open,\n      dataTheme,\n      className,\n      onOpen,\n      onClose,\n      onToggle,\n      ...props\n    },\n    ref\n  ): JSX.Element => {\n    const classes = twMerge(\n      'collapse',\n      className,\n      clsx({\n        'collapse-arrow': icon === 'arrow',\n        'collapse-plus': icon === 'plus',\n        'collapse-open': open === true,\n        'collapse-close': open === false,\n      })\n    )\n\n    const [isChecked, setIsChecked] = useState(open)\n    const checkboxRef = useRef<HTMLInputElement>(null)\n\n    // Handle events for checkbox changes\n    const handleCheckboxChange = () => {\n      if (onToggle) {\n        onToggle()\n      }\n      if (onOpen && checkboxRef.current?.checked) {\n        onOpen()\n      } else if (onClose && !checkboxRef.current?.checked) {\n        onClose()\n      }\n      \n      setIsChecked(checkboxRef.current?.checked)\n    }\n\n    // Handle blur events, specifically handling open/close for non checkbox types\n    const handleBlur = (event: React.FocusEvent<HTMLDivElement, Element>) => {\n      if (!checkbox && onToggle) onToggle()\n      if (!checkbox && onClose) onClose()\n      if (props.onBlur) props.onBlur(event)\n    }\n\n    // Handle focus events, specifically handling open/close for non checkbox types\n    const handleFocus = (event: React.FocusEvent<HTMLDivElement, Element>) => {\n      if (!checkbox && onToggle) onToggle()\n      if (!checkbox && onOpen) onOpen()\n      if (props.onFocus) props.onFocus(event)\n    }\n\n    return (\n      <div\n        aria-expanded={open}\n        {...props}\n        ref={ref}\n        tabIndex={isChecked === true ? undefined : 0}\n        data-theme={dataTheme}\n        className={classes}\n        onBlur={handleBlur}\n        onFocus={handleFocus}\n      >\n        {checkbox && (\n          <input\n            type=\"checkbox\"\n            tabIndex={isChecked === true ? 0 : undefined}\n            className=\"peer\"\n            ref={checkboxRef}\n            onChange={handleCheckboxChange}\n          />\n        )}\n        {children}\n      </div>\n    )\n  }\n)\n\nexport default Object.assign(Collapse, {\n  Title: CollapseTitle,\n  Content: CollapseContent,\n})\n"],"names":["Collapse","React","children","checkbox","icon","open","dataTheme","className","onOpen","onClose","onToggle","props","ref","classes","twMerge","clsx","isChecked","setIsChecked","useState","checkboxRef","useRef","jsxs","event","jsx","_a","_b","_c","Collapse$1","CollapseTitle","CollapseContent"],"mappings":"+MAmBA,MAAAA,EAAAC,GAAA,WAAuB,CAAA,CAEnB,SAAAC,EACE,SAAAC,EACA,KAAAC,EACA,KAAAC,EACA,UAAAC,EACA,UAAAC,EACA,OAAAC,EACA,QAAAC,EACA,SAAAC,EACA,GAAAC,CACG,EAAAC,KAAA,CAIL,MAAAC,GAAAC,GAAgB,WACdP,EACAQ,GAAA,CACK,iBAAAX,IAAA,QACwB,gBAAAA,IAAA,OACD,gBAAAC,IAAA,GACA,iBAAAA,IAAA,EACC,CAAA,CAC5B,EAGH,CAAAW,EAAAC,EAAA,EAAAC,EAAA,SAAAb,CAAA,EACAc,EAAAC,SAAA,IAAA,EA8BA,OAAAC,EACE,MAAC,CAAA,gBAAAhB,EACgB,GAAAM,EACX,IAAAC,GACJ,SAAAI,IAAA,GAAA,OAAA,EAC2C,aAAAV,EAC/B,UAAAO,GACD,OApBfS,GAAA,CACE,CAAAnB,GAAAO,GAA2BA,IAC3B,CAAAP,GAAAM,GAA0BA,IAC1BE,EAAA,QAAkBA,EAAA,OAAAW,CAAA,CAAkB,EAkB1B,QAdZA,GAAA,CACE,CAAAnB,GAAAO,GAA2BA,IAC3B,CAAAP,GAAAK,GAAyBA,IACzBG,EAAA,SAAmBA,EAAA,QAAAW,CAAA,CAAmB,EAY3B,SAAA,CAERnB,GAAAoB,EACC,QAAC,CAAA,KAAA,WACM,SAAAP,IAAA,GAAA,EAAA,OAC8B,UAAA,OACzB,IAAAG,EACL,SA3Cb,IAAA,WACET,GACEA,IAEFF,KAAAgB,EAAAL,EAAA,UAAA,MAAAK,EAAA,SACEhB,IAAOC,GAAA,GAAAgB,EAAAN,EAAA,UAAA,MAAAM,EAAA,UAEPhB,IAGFQ,IAAAS,EAAAP,EAAA,UAAA,YAAAO,EAAA,OAAA,CAAyC,CAkCzB,CAAA,EACZxB,CAED,CAAA,CAAA,CACH,CAGN,EAEAyB,EAAA,OAAA,OAAA3B,EAAA,CAAuC,MAAA4B,GAC9B,QAAAC,EAET,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}