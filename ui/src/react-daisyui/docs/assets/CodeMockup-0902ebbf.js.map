{"version":3,"file":"CodeMockup-0902ebbf.js","sources":["../../src/CodeMockup/CodeMockupLine.tsx","../../src/CodeMockup/CodeMockup.tsx"],"sourcesContent":["import React, { forwardRef } from 'react'\nimport clsx from 'clsx'\nimport { twMerge } from 'tailwind-merge'\n\nimport { ComponentStatus, IComponentBaseProps } from '../types'\n\nexport type CodeMockupLineProps = React.HTMLAttributes<HTMLPreElement> &\n  IComponentBaseProps & {\n    dataPrefix?: string | boolean\n    status?: ComponentStatus\n    innerProps?: React.HTMLAttributes<HTMLElement>\n    innerRef?: React.Ref<HTMLElement>\n  }\n\nexport const CodeMockupLine = forwardRef<HTMLPreElement, CodeMockupLineProps>(\n  (\n    {\n      dataPrefix,\n      dataTheme,\n      status,\n      className,\n      children,\n      innerProps,\n      innerRef,\n      ...props\n    },\n    ref\n  ): JSX.Element => {\n    const classes = twMerge(\n      clsx({\n        'bg-info': status === 'info',\n        'bg-success': status === 'success',\n        'bg-warning': status === 'warning',\n        'bg-error': status === 'error',\n        'text-info-content': status === 'info',\n        'text-success-content': status === 'success',\n        'text-warning-content': status === 'warning',\n        'text-error-content': status === 'error',\n      }),\n      className\n    )\n\n    const allProps = {\n      ...props,\n      className: classes,\n      ...(dataPrefix !== false && { 'data-prefix': dataPrefix || '>' }),\n    } as Record<string, any>\n\n    return (\n      <pre {...allProps} data-theme={dataTheme} className={classes} ref={ref}>\n        <code {...innerProps} ref={innerRef}>\n          {children}\n        </code>\n      </pre>\n    )\n  }\n)\n\nCodeMockupLine.displayName = 'CodeMockup.Line'\n","import React, { forwardRef } from 'react'\nimport { twMerge } from 'tailwind-merge'\n\nimport { IComponentBaseProps } from '../types'\nimport { CodeMockupLine, CodeMockupLineProps } from './CodeMockupLine'\n\nexport type CodeMockupProps = React.HTMLAttributes<HTMLDivElement> &\n  IComponentBaseProps\n\nconst CodeMockup = forwardRef<HTMLDivElement, CodeMockupProps>(\n  ({ dataTheme, className, children, ...props }, ref): JSX.Element => {\n    const classes = twMerge('mockup-code', className)\n\n    return (\n      <div\n        aria-label=\"Code mockup\"\n        {...props}\n        data-theme={dataTheme}\n        className={classes}\n        ref={ref}\n      >\n        {React.Children.map(children, (child, index) => {\n          const childComponent = child as React.ReactElement<CodeMockupLineProps>\n          return React.cloneElement(childComponent, {\n              key: index,\n          })\n        })}\n      </div>\n    )\n  }\n)\n\nCodeMockup.displayName = 'CodeMockup'\nconst CodeMockupNamespace = Object.assign(CodeMockup, { Line: CodeMockupLine })\n\nexport { CodeMockupNamespace as CodeMockup }\n"],"names":["CodeMockupLine","forwardRef","dataPrefix","dataTheme","status","className","children","innerProps","innerRef","props","ref","classes","twMerge","clsx","allProps","jsx","CodeMockup","React","child","index","childComponent","CodeMockupNamespace"],"mappings":"0IAcO,MAAAA,EAAAC,EAAA,WAAuB,CAAA,CAE1B,WAAAC,EACE,UAAAC,EACA,OAAAC,EACA,UAAAC,EACA,SAAAC,EACA,WAAAC,EACA,SAAAC,EACA,GAAAC,CACG,EAAAC,IAAA,CAIL,MAAAC,EAAAC,EAAgBC,EAAA,CACT,UAAAT,IAAA,OACmB,aAAAA,IAAA,UACG,aAAAA,IAAA,UACA,WAAAA,IAAA,QACF,oBAAAA,IAAA,OACS,uBAAAA,IAAA,UACG,uBAAAA,IAAA,UACA,qBAAAA,IAAA,OACF,CAAA,EAClCC,CACD,EAGFS,EAAA,CAAiB,GAAAL,EACZ,UAAAE,EACQ,GAAAT,IAAA,IAAA,CAAA,cAAAA,GAAA,GAAA,CACoD,EAGjE,OAAAa,EAAA,MAAA,CAAA,GAAAD,EAAA,aAAAX,EAAA,UAAAQ,EAAA,IAAAD,EAAA,SAAAK,EAAA,OAAA,CAAA,GAAAR,EAAA,IAAAC,EAAA,SAAAF,EAAA,CAAA,CAAA,CAKE,CAGN,EAEAN,EAAA,YAAA,gvBCjDA,MAAAgB,EAAAf,EAAA,WAAmB,CAAA,CAAA,UAAAE,EAAA,UAAAE,EAAA,SAAAC,EAAA,GAAAG,CAAA,EAAAC,IAAA,CAEf,MAAAC,EAAAC,EAAA,cAAAP,CAAA,EAEA,OAAAU,EACE,MAAC,CAAA,aAAA,cACY,GAAAN,EACP,aAAAN,EACQ,UAAAQ,EACD,IAAAD,EACX,SAAAO,EAAA,SAAA,IAAAX,EAAA,CAAAY,EAAAC,IAAA,CAGE,MAAAC,EAAAF,EACA,OAAAD,EAAA,aAAAG,EAAA,CAA0C,IAAAD,CACjC,CAAA,CACR,CAAA,CACF,CAAA,CACH,CAGN,EAEAH,EAAA,YAAA,aACA,MAAAK,EAAA,OAAA,OAAAL,EAAA,CAAA,KAAAhB,EAAA"}