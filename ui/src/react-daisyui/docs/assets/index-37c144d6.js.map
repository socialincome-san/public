{"version":3,"file":"index-37c144d6.js","sources":["../../src/Select/SelectOption.tsx","../../src/Select/Select.tsx"],"sourcesContent":["import React from 'react'\n\nexport type SelectOptionProps = React.OptionHTMLAttributes<HTMLOptionElement>\n\nconst SelectOption = ({\n  children,\n  ...props\n}: SelectOptionProps): JSX.Element => {\n  return (\n    <option {...props}>\n      {children}\n    </option>\n  )\n}\n\nexport default SelectOption\n","import React, { ReactElement } from 'react'\nimport clsx from 'clsx'\nimport { twMerge } from 'tailwind-merge'\n\nimport { IComponentBaseProps, ComponentColor, ComponentSize } from '../types'\n\nimport SelectOption, { SelectOptionProps } from './SelectOption'\n\nexport type SelectProps = Omit<\n  React.SelectHTMLAttributes<HTMLSelectElement>,\n  'size' | 'color'\n> &\n  IComponentBaseProps & {\n    children: ReactElement<SelectOptionProps>[]\n    size?: ComponentSize\n    color?: ComponentColor\n    bordered?: boolean\n    borderOffset?: boolean\n  }\n\nconst SelectInner = (\n  props: SelectProps,\n  ref: React.ForwardedRef<HTMLSelectElement>\n): JSX.Element => {\n  const {\n    children,\n    size,\n    color,\n    bordered = true,\n    borderOffset,\n    dataTheme,\n    className,\n    ...rest\n  } = props\n\n  const classes = twMerge(\n    'select',\n    className,\n    clsx({\n      'select-lg': size === 'lg',\n      'select-md': size === 'md',\n      'select-sm': size === 'sm',\n      'select-xs': size === 'xs',\n      'select-primary': color === 'primary',\n      'select-secondary': color === 'secondary',\n      'select-accent': color === 'accent',\n      'select-ghost': color === 'ghost',\n      'select-info': color === 'info',\n      'select-success': color === 'success',\n      'select-warning': color === 'warning',\n      'select-error': color === 'error',\n      'select-bordered': bordered,\n      'focus:outline-offset-0': !borderOffset,\n    })\n  )\n\n  return (\n    <select {...rest} ref={ref} data-theme={dataTheme} className={classes}>\n      {children}\n    </select>\n  )\n}\n\nconst Select = React.forwardRef(SelectInner)\nexport default Object.assign(Select, { Option: SelectOption })\n"],"names":["SelectOption","children","props","jsx","SelectOption$1","SelectInner","ref","size","color","bordered","borderOffset","dataTheme","className","rest","classes","twMerge","clsx","Select","React","Select$1"],"mappings":"mIAIA,MAAAA,EAAA,CAAA,CAAsB,SAAAC,EACpB,GAAAC,CAEF,IACEC,EAAA,SAAA,CAAA,GAAAD,EAAA,SAAAD,CAAA,CAAA,EAOFG,EAAAJ,8GCKA,MAAAK,EAAA,CAAAH,EAAAI,IAAA,CAIE,KAAA,CAAM,SAAAL,EACJ,KAAAM,EACA,MAAAC,EACA,SAAAC,EAAA,GACW,aAAAC,EACX,UAAAC,EACA,UAAAC,EACA,GAAAC,CACG,EAAAX,EAGLY,EAAAC,EAAgB,SACdH,EACAI,EAAA,CACK,YAAAT,IAAA,KACmB,YAAAA,IAAA,KACA,YAAAA,IAAA,KACA,YAAAA,IAAA,KACA,iBAAAC,IAAA,UACM,mBAAAA,IAAA,YACE,gBAAAA,IAAA,SACH,eAAAA,IAAA,QACD,cAAAA,IAAA,OACD,iBAAAA,IAAA,UACG,iBAAAA,IAAA,UACA,eAAAA,IAAA,QACF,kBAAAC,EACP,yBAAA,CAAAC,CACQ,CAAA,CAC5B,EAGH,OAAAP,EAAA,SAAA,CAAA,GAAAU,EAAA,IAAAP,EAAA,aAAAK,EAAA,UAAAG,EAAA,SAAAb,CAAA,CAAA,CAKF,EAEAgB,EAAAC,EAAA,WAAAb,CAAA,EACAc,EAAA,OAAA,OAAAF,EAAA,CAAA,OAAAjB,CAAA,CAAA"}