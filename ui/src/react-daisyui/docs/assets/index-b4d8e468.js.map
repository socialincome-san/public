{"version":3,"file":"index-b4d8e468.js","sources":["../../src/Navbar/NavbarSection.tsx","../../src/Navbar/Navbar.tsx"],"sourcesContent":["import React from 'react'\nimport clsx from 'clsx'\nimport { twMerge } from 'tailwind-merge'\n\nimport { NavbarProps } from './Navbar'\n\nexport type NavbarSectionProps = NavbarProps & {\n  section: 'start' | 'center' | 'end'\n}\n\nconst NavbarSection = React.forwardRef<HTMLDivElement, NavbarSectionProps>(\n  ({ children, section, dataTheme, className, style }, ref): JSX.Element => {\n    const classes = twMerge(\n      className,\n      clsx({\n        'flex-1': section !== 'center',\n        'navbar-start': section === 'start',\n        'navbar-center': section === 'center',\n        'navbar-end': section === 'end',\n      })\n    )\n\n    return (\n      <div data-theme={dataTheme} className={classes} style={style} ref={ref}>\n        {children}\n      </div>\n    )\n  }\n)\n\nexport default NavbarSection\n","import React from 'react'\nimport { twMerge } from 'tailwind-merge'\n\nimport { IComponentBaseProps } from '../types'\n\nimport NavbarSection, { NavbarSectionProps } from './NavbarSection'\n\nexport type NavbarProps = React.HTMLAttributes<HTMLDivElement> &\n  IComponentBaseProps\n\nconst Navbar = React.forwardRef<HTMLDivElement, NavbarProps>(\n  ({ children, dataTheme, className, ...props }, ref): JSX.Element => {\n    const classes = twMerge('navbar', className)\n\n    return (\n      <div\n        role=\"navigation\"\n        aria-label=\"Navbar\"\n        {...props}\n        data-theme={dataTheme}\n        className={classes}\n        ref={ref}\n      >\n        {children}\n      </div>\n    )\n  }\n)\n\nconst NavbarStart = React.forwardRef<\n  HTMLDivElement,\n  Omit<NavbarSectionProps, 'section'>\n>((props, ref) => <NavbarSection {...props} section=\"start\" ref={ref} />)\n\nconst NavbarCenter = React.forwardRef<\n  HTMLDivElement,\n  Omit<NavbarSectionProps, 'section'>\n>((props, ref) => <NavbarSection {...props} section=\"center\" ref={ref} />)\n\nconst NavbarEnd = React.forwardRef<\n  HTMLDivElement,\n  Omit<NavbarSectionProps, 'section'>\n>((props, ref) => <NavbarSection {...props} section=\"end\" ref={ref} />)\n\nexport default Object.assign(Navbar, {\n  Start: NavbarStart,\n  Center: NavbarCenter,\n  End: NavbarEnd,\n})\n"],"names":["NavbarSection","React","children","section","dataTheme","className","style","ref","classes","twMerge","clsx","jsx","NavbarSection$1","Navbar","props","NavbarStart","NavbarCenter","NavbarEnd","Navbar$1"],"mappings":"mIAUA,MAAAA,EAAAC,EAAA,WAA4B,CAAA,CAAA,SAAAC,EAAA,QAAAC,EAAA,UAAAC,EAAA,UAAAC,EAAA,MAAAC,CAAA,EAAAC,IAAA,CAExB,MAAAC,EAAAC,EAAgBJ,EACdK,EAAA,CACK,SAAAP,IAAA,SACmB,eAAAA,IAAA,QACM,gBAAAA,IAAA,SACC,aAAAA,IAAA,KACH,CAAA,CAC3B,EAGH,OAAAQ,EAAA,MAAA,CAAA,aAAAP,EAAA,UAAAI,EAAA,MAAAF,EAAA,IAAAC,EAAA,SAAAL,CAAA,CAAA,CAGE,CAGN,EAEAU,EAAAZ,oWCpBA,MAAAa,EAAAZ,EAAA,WAAqB,CAAA,CAAA,SAAAC,EAAA,UAAAE,EAAA,UAAAC,EAAA,GAAAS,CAAA,EAAAP,IAAA,CAEjB,MAAAC,EAAAC,EAAA,SAAAJ,CAAA,EAEA,OAAAM,EACE,MAAC,CAAA,KAAA,aACM,aAAA,SACM,GAAAG,EACP,aAAAV,EACQ,UAAAI,EACD,IAAAD,EACX,SAAAL,CAEC,CAAA,CACH,CAGN,EAEAa,EAAAd,EAAA,WAAA,CAAAa,EAAAP,IAAAI,EAAAX,EAAA,CAAA,GAAAc,EAAA,QAAA,QAAA,IAAAP,CAAA,CAAA,CAAA,EAKAS,EAAAf,EAAA,WAAA,CAAAa,EAAAP,IAAAI,EAAAX,EAAA,CAAA,GAAAc,EAAA,QAAA,SAAA,IAAAP,CAAA,CAAA,CAAA,EAKAU,EAAAhB,EAAA,WAAA,CAAAa,EAAAP,IAAAI,EAAAX,EAAA,CAAA,GAAAc,EAAA,QAAA,MAAA,IAAAP,CAAA,CAAA,CAAA,EAKAW,EAAA,OAAA,OAAAL,EAAA,CAAqC,MAAAE,EAC5B,OAAAC,EACC,IAAAC,CAEV,CAAA"}