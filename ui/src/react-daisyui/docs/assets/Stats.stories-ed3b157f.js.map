{"version":3,"file":"Stats.stories-ed3b157f.js","sources":["../../src/Stats/StatItem.tsx","../../src/Stats/Stat.tsx","../../src/Stats/Stats.tsx"],"sourcesContent":["import React from 'react'\nimport clsx from 'clsx'\nimport { twMerge } from 'tailwind-merge'\n\nimport { IComponentBaseProps } from '../types'\n\nexport type StatItemProps = React.HTMLAttributes<HTMLDivElement> &\n  IComponentBaseProps & {\n    variant: 'title' | 'value' | 'desc' | 'figure' | 'actions'\n  }\n\nconst StatItem = React.forwardRef<HTMLDivElement, StatItemProps>(\n  ({ variant, className, ...props }, ref): JSX.Element => {\n    const classes = twMerge(\n      className,\n      clsx({\n        'stat-title': variant === 'title',\n        'stat-value': variant === 'value',\n        'stat-desc': variant === 'desc',\n        'stat-figure': variant === 'figure',\n        'stat-actions': variant === 'actions',\n      })\n    )\n\n    return <div {...props} className={classes} ref={ref} />\n  }\n)\n\nexport default StatItem\n","import React, { forwardRef } from 'react'\nimport { twMerge } from 'tailwind-merge'\n\nimport { IComponentBaseProps } from '../types'\n\nimport StatItem from './StatItem'\n\nexport type StatProps = React.HTMLAttributes<HTMLDivElement> &\n  IComponentBaseProps\n\nconst Stat = forwardRef<HTMLDivElement, StatProps>(\n  ({ dataTheme, className, ...props }, ref): JSX.Element => {\n    const classes = twMerge('stat', className)\n\n    return (\n      <div {...props} data-theme={dataTheme} className={classes} ref={ref} />\n    )\n  }\n)\n\nexport default Object.assign(Stat, { Item: StatItem })\n","import React from 'react'\nimport clsx from 'clsx'\nimport { twMerge } from 'tailwind-merge'\n\nimport { IComponentBaseProps } from '../types'\n\nimport Stat from './Stat'\n\nexport type StatsProps = React.HTMLAttributes<HTMLDivElement> &\n  IComponentBaseProps & {\n    horizontal?: boolean\n    vertical?: boolean\n  }\n\nconst Stats = React.forwardRef<HTMLDivElement, StatsProps>(\n  (\n    { horizontal, vertical, dataTheme, className, children, ...props },\n    ref\n  ): JSX.Element => {\n    const classes = twMerge(\n      'stats',\n      className,\n      clsx({\n        'stats-horizontal': horizontal,\n        'stats-vertical': vertical,\n      })\n    )\n\n    return (\n      <div {...props} ref={ref} data-theme={dataTheme} className={classes}>\n        {children}\n      </div>\n    )\n  }\n)\n\nexport default Object.assign(Stats, { Stat })\n"],"names":["StatItem","React","variant","className","props","ref","classes","twMerge","clsx","jsx","StatItem$1","Stat","forwardRef","dataTheme","Stat$1","Stats","horizontal","vertical","children","Stats$1"],"mappings":"oSAWA,MAAAA,EAAAC,EAAA,WAAuB,CAAA,CAAA,QAAAC,EAAA,UAAAC,EAAA,GAAAC,CAAA,EAAAC,IAAA,CAEnB,MAAAC,EAAAC,EAAgBJ,EACdK,EAAA,CACK,aAAAN,IAAA,QACuB,aAAAA,IAAA,QACA,YAAAA,IAAA,OACD,cAAAA,IAAA,SACE,eAAAA,IAAA,SACC,CAAA,CAC7B,EAGH,OAAAO,EAAA,MAAA,CAAA,GAAAL,EAAA,UAAAE,EAAA,IAAAD,CAAA,CAAA,CAAqD,CAEzD,EAEAK,EAAAV,iYClBA,MAAAW,EAAAC,EAAA,WAAa,CAAA,CAAA,UAAAC,EAAA,UAAAV,EAAA,GAAAC,CAAA,EAAAC,IAAA,CAET,MAAAC,EAAAC,EAAA,OAAAJ,CAAA,EAEA,OAAAM,EAAA,MAAA,CAAA,GAAAL,EAAA,aAAAS,EAAA,UAAAP,EAAA,IAAAD,CAAA,CAAA,CACuE,CAG3E,EAEAS,EAAA,OAAA,OAAAH,EAAA,CAAA,KAAAX,CAAA,CAAA,4LCNA,MAAAe,EAAAd,EAAA,WAAoB,CAAA,CAAA,WAAAe,EAAA,SAAAC,EAAA,UAAAJ,EAAA,UAAAV,EAAA,SAAAe,EAAA,GAAAd,CAAA,EAAAC,IAAA,CAKhB,MAAAC,EAAAC,EAAgB,QACdJ,EACAK,EAAA,CACK,mBAAAQ,EACiB,iBAAAC,CACF,CAAA,CACnB,EAGH,OAAAR,EAAA,MAAA,CAAA,GAAAL,EAAA,IAAAC,EAAA,aAAAQ,EAAA,UAAAP,EAAA,SAAAY,CAAA,CAAA,CAGE,CAGN,EAEAC,EAAA,OAAA,OAAAJ,EAAA,CAAAJ,KAAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}