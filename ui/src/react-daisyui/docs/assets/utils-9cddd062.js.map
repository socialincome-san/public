{"version":3,"file":"utils-9cddd062.js","sources":["../../src/utils.ts"],"sourcesContent":["import React from 'react'\nimport { twMerge } from 'tailwind-merge'\n\nexport const toTitleCase = (str: string) => {\n  return str\n    .toLowerCase()\n    .split(' ')\n    .map(function (word) {\n      return word.charAt(0).toUpperCase() + word.slice(1)\n    })\n    .join(' ')\n}\n\n// Returns true if an element is a react fragment\nexport const isReactFragment = (node: React.ReactNode | typeof React.Fragment) => {\n  if (!node) return false\n\n  if ((node as React.ReactElement)?.type) {\n    return (node as React.ReactElement)?.type === React.Fragment\n  }\n\n  return node === React.Fragment\n}\n\n// If an invalid element or fragment is passed in as the node, wrap it with the wrapper and add props\n// If a valid element is passed, add the props\nexport const wrapWithElementIfInvalid = ({\n  node,\n  wrapper,\n  props = {},\n}: {\n  node: React.ReactNode\n  wrapper: React.ReactElement\n  props?: any\n}) => {\n  if (!node) {\n    return React.cloneElement(wrapper, props)\n  } else if (!React.isValidElement(node)) {\n    return React.cloneElement(wrapper, props, node)\n  } else if (isReactFragment(node)) {\n    return React.cloneElement(\n      wrapper,\n      { ...props, className: twMerge(node.props?.className, props?.className) },\n      node.props.children\n    )\n  } else {\n    return React.cloneElement(node, {\n      ...props,\n      className: twMerge(node.props?.className, props?.className),\n    })\n  }\n}\n\n// Returns true if there is a single, string child element\nexport const isSingleStringChild = (children?: React.ReactNode) => {\n  return (\n    children &&\n    React.Children.count(children) === 1 &&\n    React.isValidElement(children) &&\n    typeof children.props.children === 'string'\n  )\n}\n"],"names":["isReactFragment","node","React","wrapWithElementIfInvalid","wrapper","props","twMerge","_a","_b","isSingleStringChild","children"],"mappings":"mFAca,MAAAA,EAAmBC,GACzBA,EAEAA,GAAA,MAAAA,EAA6B,MACxBA,GAAA,YAAAA,EAA6B,QAASC,EAAM,SAG/CD,IAASC,EAAM,SANJ,GAWPC,EAA2B,CAAC,CACvC,KAAAF,EACA,QAAAG,EACA,MAAAC,EAAQ,CAAC,CACX,IAIM,SACJ,OAAKJ,EAEOC,EAAM,eAAeD,CAAI,EAE1BD,EAAgBC,CAAI,EACtBC,EAAM,aACXE,EACA,CAAE,GAAGC,EAAO,UAAWC,GAAQC,EAAAN,EAAK,QAAL,YAAAM,EAAY,UAAWF,GAAA,YAAAA,EAAO,SAAS,CAAE,EACxEJ,EAAK,MAAM,QAAA,EAGNC,EAAM,aAAaD,EAAM,CAC9B,GAAGI,EACH,UAAWC,GAAQE,EAAAP,EAAK,QAAL,YAAAO,EAAY,UAAWH,GAAA,YAAAA,EAAO,SAAS,CAAA,CAC3D,EAXMH,EAAM,aAAaE,EAASC,EAAOJ,CAAI,EAFvCC,EAAM,aAAaE,EAASC,CAAK,CAe5C,EAGaI,EAAuBC,GAEhCA,GACAR,EAAM,SAAS,MAAMQ,CAAQ,IAAM,GACnCR,EAAM,eAAeQ,CAAQ,GAC7B,OAAOA,EAAS,MAAM,UAAa"}