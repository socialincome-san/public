{"version":3,"file":"Range.stories-12106e40.js","sources":["../../src/Range/Range.tsx"],"sourcesContent":["import React, { forwardRef, useMemo } from 'react'\nimport clsx from 'clsx'\nimport { twMerge } from 'tailwind-merge'\n\nimport {\n  IComponentBaseProps,\n  ComponentColor,\n  ComponentSize,\n} from '../types'\n\nexport type RangeProps = Omit<\n  React.InputHTMLAttributes<HTMLInputElement>,\n  'size'\n> &\n  IComponentBaseProps & {\n    color?: ComponentColor\n    size?: ComponentSize\n  }\n\nconst Range = forwardRef<HTMLInputElement, RangeProps>(\n  ({ color, size, step, dataTheme, className, ...props }, ref): JSX.Element => {\n    const classes = twMerge(\n      'range',\n      className,\n      clsx({\n        'range-lg': size === 'lg',\n        'range-md': size === 'md',\n        'range-sm': size === 'sm',\n        'range-xs': size === 'xs',\n        'range-primary': color === 'primary',\n        'range-secondary': color === 'secondary',\n        'range-accent': color === 'accent',\n        'range-info': color === 'info',\n        'range-success': color === 'success',\n        'range-warning': color === 'warning',\n        'range-error': color === 'error',\n      })\n    )\n\n    const isNumeric = (n: any): n is number =>\n      !isNaN(parseFloat(n)) && isFinite(n)\n\n    const numSteps = useMemo(() => {\n      const safeStep = Math.max(1, Number(step))\n      return Math.ceil(100 / safeStep) ?? 1\n    }, [props.max, step])\n\n    return (\n      <>\n        <input\n          {...props}\n          ref={ref}\n          type=\"range\"\n          step={step}\n          data-theme={dataTheme}\n          className={classes}\n        />\n        {isNumeric(step) && (\n          <div className=\"w-full flex justify-between text-xs px-2\">\n            {[...Array(numSteps + 1)].map((_, i) => {\n              return <span key={i}>|</span>\n            })}\n          </div>\n        )}\n      </>\n    )\n  }\n)\n\nRange.displayName = 'Range'\n\nexport default Range\n"],"names":["Range","forwardRef","color","size","step","dataTheme","className","props","ref","classes","twMerge","clsx","isNumeric","n","numSteps","useMemo","safeStep","jsxs","Fragment","jsx","_","i","Range$1"],"mappings":"mLAmBA,MAAAA,EAAAC,EAAA,WAAc,CAAA,CAAA,MAAAC,EAAA,KAAAC,EAAA,KAAAC,EAAA,UAAAC,EAAA,UAAAC,EAAA,GAAAC,CAAA,EAAAC,IAAA,CAEV,MAAAC,EAAAC,EAAgB,QACdJ,EACAK,EAAA,CACK,WAAAR,IAAA,KACkB,WAAAA,IAAA,KACA,WAAAA,IAAA,KACA,WAAAA,IAAA,KACA,gBAAAD,IAAA,UACM,kBAAAA,IAAA,YACE,eAAAA,IAAA,SACH,aAAAA,IAAA,OACF,gBAAAA,IAAA,UACG,gBAAAA,IAAA,UACA,cAAAA,IAAA,OACF,CAAA,CAC1B,EAGHU,EAAAC,GAAA,CAAA,MAAA,WAAAA,CAAA,CAAA,GAAA,SAAAA,CAAA,EAGAC,EAAAC,EAAAA,QAAA,IAAA,CACE,MAAAC,EAAA,KAAA,IAAA,EAAA,OAAAZ,CAAA,CAAA,EACA,OAAA,KAAA,KAAA,IAAAY,CAAA,GAAA,CAAoC,EAAA,CAAAT,EAAA,IAAAH,CAAA,CAAA,EAGtC,OAAAa,EAAAC,EAAA,CAAA,SAAA,CAEIC,EAAA,QAAC,CAAA,GAAAZ,EACK,IAAAC,EACJ,KAAA,QACK,KAAAJ,EACL,aAAAC,EACY,UAAAI,CACD,CAAA,EACbG,EAAAR,CAAA,GAAAe,EAAA,MAAA,CAAA,UAAA,2CAAA,SAAA,CAAA,GAAA,MAAAL,EAAA,CAAA,CAAA,EAAA,IAAA,CAAAM,EAAAC,IAIMF,EAAA,OAAA,CAAA,SAAA,GAAA,EAAAE,CAAA,CAAsB,EAAA,CAE1B,CAAA,CAAA,CAEJ,CAGN,EAEArB,EAAA,YAAA,QAEA,MAAAsB,EAAAtB;;;;;;;;;;;;;;;;;;;;;"}