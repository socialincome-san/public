{"version":3,"file":"index-e9ea166f.js","sources":["../../src/Menu/MenuTitle.tsx","../../src/Menu/MenuItem.tsx","../../src/Menu/Menu.tsx"],"sourcesContent":["import React from 'react'\nimport { twMerge } from 'tailwind-merge'\n\nimport { IComponentBaseProps } from '../types'\n\nexport type MenuTitleProps = React.LiHTMLAttributes<HTMLLIElement> &\n  IComponentBaseProps\n\nconst MenuTitle = React.forwardRef<HTMLLIElement, MenuTitleProps>(\n  ({ className, ...props }, ref) => {\n    const classes = twMerge('menu-title', className)\n\n    return <li {...props} className={classes} ref={ref} />\n  }\n)\n\nexport default MenuTitle\n","import React from 'react'\nimport clsx from 'clsx'\nimport { twMerge } from 'tailwind-merge'\n\nimport { IComponentBaseProps } from '../types'\n\nexport type MenuItemProps = React.LiHTMLAttributes<HTMLLIElement> &\n  IComponentBaseProps & {\n    disabled?: boolean\n  }\n\nconst MenuItem = React.forwardRef<HTMLLIElement, MenuItemProps>(\n  ({ className, disabled, ...props }, ref) => {\n    const classes = twMerge(\n      className,\n      clsx({\n        disabled: disabled,\n      })\n    )\n\n    return <li role=\"menuitem\" className={classes} {...props} ref={ref} />\n  }\n)\n\nexport default MenuItem\n","import React from 'react'\nimport clsx from 'clsx'\nimport { twMerge } from 'tailwind-merge'\n\nimport { IComponentBaseProps, ComponentSize } from '../types'\n\nimport MenuTitle, { MenuTitleProps as TitleProps } from './MenuTitle'\nimport MenuItem, { MenuItemProps as ItemProps } from './MenuItem'\n\nexport type MenuTitleProps = TitleProps\nexport type MenuItemProps = ItemProps\n\nexport type MenuProps = React.HTMLAttributes<HTMLUListElement> &\n  IComponentBaseProps & {\n    normal?: ComponentSize | boolean // Applies default paddings\n    compact?: ComponentSize | boolean // Applies smaller padding\n    vertical?: ComponentSize | boolean // Vertical menu (default)\n    horizontal?: ComponentSize | boolean // Horizontal menu\n  }\n\ninterface ModifierMap {\n  [key: string]: {\n    [key: string]: string | undefined\n  }\n}\n\nconst DYNAMIC_MODIFIERS: ModifierMap = {\n  compact: {\n    true: 'menu-compact',\n    xs: 'xs:menu-compact',\n    sm: 'sm:menu-compact',\n    md: 'md:menu-compact',\n    lg: 'lg:menu-compact',\n  },\n  normal: {\n    true: 'menu-normal',\n    xs: 'xs:menu-normal',\n    sm: 'sm:menu-normal',\n    md: 'md:menu-normal',\n    lg: 'lg:menu-normal',\n  },\n  horizontal: {\n    true: 'menu-horizontal',\n    xs: 'xs:menu-horizontal',\n    sm: 'sm:menu-horizontal',\n    md: 'md:menu-horizontal',\n    lg: 'lg:menu-horizontal',\n  },\n  vertical: {\n    true: 'menu-vertical',\n    xs: 'xs:menu-vertical',\n    sm: 'sm:menu-vertical',\n    md: 'md:menu-vertical',\n    lg: 'lg:menu-vertical',\n  },\n}\n\nconst Menu = React.forwardRef<HTMLUListElement, MenuProps>(\n  (\n    { normal, compact, horizontal, vertical, dataTheme, className, ...props },\n    ref\n  ) => {\n    const classes = twMerge(\n      'menu',\n      className,\n      clsx({\n        [(compact && DYNAMIC_MODIFIERS.compact[compact.toString()]) || '']:\n          compact,\n        [(normal && DYNAMIC_MODIFIERS.normal[normal.toString()]) || '']: normal,\n        [(horizontal && DYNAMIC_MODIFIERS.horizontal[horizontal.toString()]) ||\n        '']: horizontal,\n        [(vertical && DYNAMIC_MODIFIERS.vertical[vertical.toString()]) || '']:\n          vertical,\n      })\n    )\n\n    return (\n      <ul\n        role=\"menu\"\n        data-theme={dataTheme}\n        className={classes}\n        {...props}\n        ref={ref}\n      />\n    )\n  }\n)\n\nexport default Object.assign(Menu, { Title: MenuTitle, Item: MenuItem })\n"],"names":["MenuTitle","React","className","props","ref","classes","twMerge","jsx","MenuTitle$1","MenuItem","disabled","clsx","MenuItem$1","DYNAMIC_MODIFIERS","Menu","normal","compact","horizontal","vertical","dataTheme","Menu$1"],"mappings":"mIAQA,MAAAA,EAAAC,EAAA,WAAwB,CAAA,CAAA,UAAAC,EAAA,GAAAC,CAAA,EAAAC,IAAA,CAEpB,MAAAC,EAAAC,EAAA,aAAAJ,CAAA,EAEA,OAAAK,EAAA,KAAA,CAAA,GAAAJ,EAAA,UAAAE,EAAA,IAAAD,CAAA,CAAA,CAAoD,CAExD,EAEAI,EAAAR,sMCLA,MAAAS,EAAAR,EAAA,WAAuB,CAAA,CAAA,UAAAC,EAAA,SAAAQ,EAAA,GAAAP,CAAA,EAAAC,IAAA,CAEnB,MAAAC,EAAAC,EAAgBJ,EACdS,EAAA,CACK,SAAAD,CACH,CAAA,CACD,EAGH,OAAAH,EAAA,KAAA,CAAA,KAAA,WAAA,UAAAF,EAAA,GAAAF,EAAA,IAAAC,CAAA,CAAA,CAAoE,CAExE,EAEAQ,EAAAH,kSCEA,MAAAI,EAAA,CAAuC,QAAA,CAC5B,KAAA,eACD,GAAA,kBACF,GAAA,kBACA,GAAA,kBACA,GAAA,iBACA,EACN,OAAA,CACQ,KAAA,cACA,GAAA,iBACF,GAAA,iBACA,GAAA,iBACA,GAAA,gBACA,EACN,WAAA,CACY,KAAA,kBACJ,GAAA,qBACF,GAAA,qBACA,GAAA,qBACA,GAAA,oBACA,EACN,SAAA,CACU,KAAA,gBACF,GAAA,mBACF,GAAA,mBACA,GAAA,mBACA,GAAA,kBACA,CAER,EAEAC,EAAAb,EAAA,WAAmB,CAAA,CAAA,OAAAc,EAAA,QAAAC,EAAA,WAAAC,EAAA,SAAAC,EAAA,UAAAC,EAAA,UAAAjB,EAAA,GAAAC,CAAA,EAAAC,IAAA,CAKf,MAAAC,EAAAC,EAAgB,OACdJ,EACAS,EAAA,CACK,CAAAK,GAAAH,EAAA,QAAAG,EAAA,SAAA,CAAA,GAAA,EAAA,EAAAA,EAED,CAAAD,GAAAF,EAAA,OAAAE,EAAA,SAAA,CAAA,GAAA,EAAA,EAAAA,EAC+D,CAAAE,GAAAJ,EAAA,WAAAI,EAAA,SAAA,CAAA,GAAA,EAAA,EAAAA,EAE5D,CAAAC,GAAAL,EAAA,SAAAK,EAAA,SAAA,CAAA,GAAA,EAAA,EAAAA,CAEH,CAAA,CACH,EAGH,OAAAX,EACE,KAAC,CAAA,KAAA,OACM,aAAAY,EACO,UAAAd,EACD,GAAAF,EACP,IAAAC,CACJ,CAAA,CACF,CAGN,EAEAgB,EAAA,OAAA,OAAAN,EAAA,CAAA,MAAAd,EAAA,KAAAS,CAAA,CAAA"}