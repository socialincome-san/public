{"version":3,"file":"Carousel.stories-2123af9e.js","sources":["../../src/Carousel/CarouselItem.tsx","../../src/Carousel/Carousel.tsx"],"sourcesContent":["import React, { cloneElement, LegacyRef } from 'react'\nimport clsx from 'clsx'\nimport { twMerge } from 'tailwind-merge'\n\nimport Button from '../Button'\n\nexport type CarouselItemWidth = 'full' | 'half'\n\nexport type CarouselItemProps = React.HTMLAttributes<HTMLDivElement> & {\n  readonly innerRef?: LegacyRef<HTMLDivElement>\n  src?: string\n  alt?: string\n  index?: number\n  width?: CarouselItemWidth\n  hasButtons?: boolean\n  buttonStyle?: (value: string) => React.ReactElement\n  onPrev?: () => void\n  onNext?: () => void\n}\n\nconst CarouselItem = ({\n  children,\n  innerRef,\n  src,\n  alt,\n  index = 0,\n  width,\n  hasButtons,\n  buttonStyle,\n  onPrev,\n  onNext,\n  className,\n  ...props\n}: CarouselItemProps): JSX.Element => {\n  const classes = twMerge(\n    'carousel-item relative',\n    className,\n    clsx({\n      'w-full': width === 'full',\n      'w-1/2': width === 'half',\n      'h-full': true,\n    })\n  )\n\n  const imageClasses = clsx({\n    'w-full': width === 'full',\n  })\n\n  const renderButtons = () => {\n    if (buttonStyle != null) {\n      return (\n        <>\n          {cloneElement(buttonStyle('❮'), {\n            onClick: onPrev,\n          })}\n          {cloneElement(buttonStyle('❯'), {\n            onClick: onNext,\n          })}\n        </>\n      )\n    }\n\n    return (\n      <>\n        <Button onClick={onPrev} shape=\"circle\">\n          ❮\n        </Button>\n        <Button onClick={onNext} shape=\"circle\">\n          ❯\n        </Button>\n      </>\n    )\n  }\n\n  return (\n    <div {...props} id={`item${index}`} ref={innerRef} className={classes}>\n      {src ? <img src={src} alt={alt} className={imageClasses} /> : children}\n      {hasButtons && (\n        <div className=\"absolute flex justify-between transform -translate-y-1/2 left-5 right-5 top-1/2\">\n          {renderButtons()}\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default CarouselItem\n","import React, {\n  cloneElement,\n  createRef,\n  forwardRef,\n  ReactElement,\n  RefObject,\n  useEffect,\n  useState,\n} from 'react'\nimport clsx from 'clsx'\nimport { twMerge } from 'tailwind-merge'\n\nimport { IComponentBaseProps } from '../types'\n\nimport CarouselItem, {\n  CarouselItemProps,\n  CarouselItemWidth,\n} from './CarouselItem'\nimport Button from '../Button'\n\nexport type CarouselProps = React.HTMLAttributes<HTMLDivElement> &\n  IComponentBaseProps & {\n    children: ReactElement<CarouselItemProps>[]\n    display?: 'slider' | 'numbered' | 'sequential'\n    snap?: 'start' | 'center' | 'end'\n    vertical?: boolean\n    width?: CarouselItemWidth\n    buttonStyle?: (value: string) => React.ReactElement\n  }\n\nconst Carousel = forwardRef<HTMLDivElement, CarouselProps>(\n  (\n    {\n      children,\n      display = 'slider',\n      snap,\n      vertical,\n      width,\n      buttonStyle,\n      dataTheme,\n      className,\n      ...props\n    },\n    ref\n  ): JSX.Element => {\n    const classes = twMerge(\n      'carousel',\n      className,\n      clsx({\n        'carousel-center': snap === 'center',\n        'carousel-end': snap === 'end',\n        'carousel-vertical': vertical,\n        'w-full': display !== 'slider',\n      })\n    )\n\n    const [itemRefs, setItemRefs] = useState<RefObject<HTMLDivElement>[]>([])\n    const [activeIndex, setActiveIndex] = useState(0)\n\n    useEffect(() => {\n      const newRefs: RefObject<HTMLDivElement>[] = []\n      children.map((_) => {\n        newRefs.push(createRef<HTMLDivElement>())\n      })\n      setItemRefs(newRefs)\n    }, [children])\n\n    const scrollToIndex = (index: number) => {\n      itemRefs[index].current?.scrollIntoView({\n        behavior: 'smooth',\n        block: 'nearest',\n        inline: snap,\n      })\n      setActiveIndex(index)\n    }\n\n    return (\n      <>\n        <div\n          role=\"listbox\"\n          aria-label=\"Image carousel\"\n          {...props}\n          ref={ref}\n          data-theme={dataTheme}\n          className={classes}\n        >\n          {children.map((child, i) => {\n            return cloneElement(child, {\n              key: i,\n              innerRef: itemRefs[i],\n              index: i + 1,\n              children: child.props.children,\n              src: child.props.src,\n              alt: child.props.alt,\n              width: display !== 'slider' ? 'full' : width,\n              hasButtons: display === 'sequential',\n              buttonStyle,\n              onPrev: () =>\n                scrollToIndex(i - 1 < 0 ? children.length - 1 : i - 1),\n              onNext: () =>\n                scrollToIndex(i + 1 > children.length - 1 ? 0 : i + 1),\n              ...child.props,\n            })\n          })}\n        </div>\n        {display === 'numbered' && (\n          <div className=\"flex justify-center w-full py-2 gap-2\">\n            {children.map((_, i) => {\n              if (buttonStyle != null) {\n                return cloneElement(buttonStyle((i + 1).toString()), {\n                  key: i,\n                  onClick: () => scrollToIndex(i),\n                })\n              }\n\n              return (\n                <Button\n                  active={i === activeIndex}\n                  key={i}\n                  onClick={() => scrollToIndex(i)}\n                >\n                  {i + 1}\n                </Button>\n              )\n            })}\n          </div>\n        )}\n      </>\n    )\n  }\n)\n\nexport default Object.assign(Carousel, { Item: CarouselItem })\n"],"names":["CarouselItem","children","innerRef","src","alt","index","width","hasButtons","buttonStyle","onPrev","onNext","className","props","classes","twMerge","clsx","imageClasses","renderButtons","jsxs","Fragment","cloneElement","jsx","Button","CarouselItem$1","Carousel","forwardRef","display","snap","vertical","dataTheme","ref","itemRefs","setItemRefs","useState","activeIndex","setActiveIndex","useEffect","newRefs","_","createRef","scrollToIndex","_a","child","i","Carousel$1"],"mappings":"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"}