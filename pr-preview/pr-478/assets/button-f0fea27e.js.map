{"version":3,"file":"button-f0fea27e.js","sources":["../../src/components/button/button.tsx"],"sourcesContent":["import * as React from 'react';\nimport { ComponentPropsWithoutRef, ElementType } from 'react';\nimport classNames from 'classnames';\nimport { Color } from '../../interfaces/color';\nimport { Size } from '../../interfaces/size';\n\ntype ButtonSize = Extract<Size, 'xs' | 'sm' | 'md' | 'lg'>;\nconst BUTTON_SIZE_MAP: { [key in ButtonSize]: string } = {\n\txs: 'btn-xs',\n\tsm: 'btn-sm',\n\tmd: '',\n\tlg: 'btn-lg',\n};\n\ntype ButtonColor = Extract<Color, 'primary' | 'secondary' | 'accent'>;\nconst BUTTON_COLOR_MAP: { [key in ButtonColor]: string } = {\n\tprimary: 'btn-primary',\n\tsecondary: 'btn-secondary',\n\taccent: 'btn-accent',\n};\n\nexport type ButtonProps<C extends ElementType> = {\n\tas?: C;\n\tcolor?: ButtonColor;\n\tsize?: ButtonSize;\n\t// icon?: Icon;\n\t// iconClassName?: string;\n} & ComponentPropsWithoutRef<C>;\n\nexport function Button<C extends ElementType = 'button'>({\n\tas,\n\tbackground = 'primary',\n\tsize = 'md',\n\tcolor = 'accent',\n\t// icon,\n\t// iconClassName,\n\tchildren,\n\tclassName,\n\t...props\n}: ButtonProps<C>) {\n\t// const Icon = icon;\n\n\treturn (\n\t\t<button className={classNames('btn', BUTTON_SIZE_MAP[size], BUTTON_COLOR_MAP[color], className)} {...props}>\n\t\t\t{/*{Icon && <Icon className={classNames(BUTTON_ICON_SIZING_MAP[size], iconClassName)} />}*/}\n\t\t\t{children}\n\t\t</button>\n\t);\n}\n"],"names":["BUTTON_SIZE_MAP","BUTTON_COLOR_MAP","Button","as","background","size","color","children","className","props","jsx","classNames"],"mappings":"+CAOA,MAAAA,EAAA,CAAyD,GAAA,SACpD,GAAA,SACA,GAAA,GACA,GAAA,QAEL,EAGAC,EAAA,CAA2D,QAAA,cACjD,UAAA,gBACE,OAAA,YAEZ,EAUO,SAAAC,EAAA,CAAkD,GAAAC,EACxD,WAAAC,EAAA,UACa,KAAAC,EAAA,KACN,MAAAC,EAAA,SACC,SAAAC,EAGR,UAAAC,EACA,GAAAC,CAED,EAAA,CAGC,OAAAC,EAAA,SAAA,CAAA,UAAAC,EAAA,MAAAX,EAAAK,CAAA,EAAAJ,EAAAK,CAAA,EAAAE,CAAA,EAAA,GAAAC,EAAA,SAAAF,CAAA,CAAA,CAMD"}