{"version":3,"file":"Typography.b4b1f686.js","sources":["../../src/components/typography/Typography.tsx"],"sourcesContent":["import classNames from 'classnames';\n\nexport const SO_TYPOGRAPHY_SIZES = [\n\t'xs',\n\t'sm',\n\t'base',\n\t'lg',\n\t'xl',\n\t'2xl',\n\t'3xl',\n\t'4xl',\n\t'5xl',\n\t'6xl',\n\t'7xl',\n\t'8xl',\n\t'9xl',\n] as const;\n\nexport type SoTypographySize = typeof SO_TYPOGRAPHY_SIZES[number];\n\nexport interface SoTypographyProps extends React.PropsWithChildren, React.HTMLAttributes<any> {\n\t/**\n\t * The DOM element type e.g. h1, h2, h3,..., p\n\t */\n\telement?: keyof Pick<JSX.IntrinsicElements, 'p' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'span'>;\n\n\t/**\n\t * The text size from the predefined stack\n\t */\n\tsize?: SoTypographySize;\n}\n\n/**\n * Component to apply different text styles\n */\nexport const SoTypography = ({ element = 'p', size = 'base', className, children, ...props }: SoTypographyProps) => {\n\tconst DOMelement = element;\n\n\treturn (\n\t\t<DOMelement className={classNames(className, `text-${size}`)} {...props}>\n\t\t\t{children}\n\t\t</DOMelement>\n\t);\n};\n"],"names":["SO_TYPOGRAPHY_SIZES","SoTypography","element","size","className","children","_jsx","classNames","props"],"mappings":"sFAEO,MAAAA,EAAA,CAAA,KAAA,KAAA,OAAA,KAAA,KAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,KAAA,EAiCAC,EAAA,CAAA,CAAsB,QAAAC,EAAA,IAAY,KAAAC,EAAA,OAAY,UAAAC,EAAQA,SAAAA,KAAWC,CAA3C,IAG5BC,EAFAJ,EAEA,CACC,UAAAK,EAAAH,EAAA,QAAAD,GAAA,EAAiC,GAAAK,EAAiCA,SAAAA,CAAlE,CAAA"}