{"version":3,"file":"typography-afc16828.js","sources":["../../src/components/typography/typography.tsx"],"sourcesContent":["import classNames from 'classnames';\nimport { ComponentPropsWithoutRef } from 'react';\nimport { twMerge } from 'tailwind-merge';\nimport { Color } from '../../interfaces/color';\nimport { Size } from '../../interfaces/size';\nimport IntrinsicElements = React.JSX.IntrinsicElements;\n\nexport type FontSize = Extract<Size, 'xs' | 'sm' | 'md' | 'lg' | 'xl' | '2xl' | '3xl' | '4xl' | '5xl'>;\nconst FONT_SIZE_MAP: { [key in FontSize]: string } = {\n\t'5xl': 'text-5xl lg:text-6xl lg:tracking-tight xl:text-7xl',\n\t'4xl': 'text-4xl lg:text-4xl lg:tracking-tight xl:text-5xl',\n\t'3xl': 'text-3xl lg:text-3xl lg:tracking-tight',\n\t'2xl': 'text-2xl tracking-tight',\n\txl: 'text-xl',\n\tlg: 'text-lg',\n\tmd: 'text-base',\n\tsm: 'text-sm',\n\txs: 'text-xs',\n};\n\nconst FONT_WEIGHTS = ['normal', 'medium', 'bold'] as const;\nexport type FontWeight = (typeof FONT_WEIGHTS)[number];\nconst FONT_WEIGHT_MAP: { [key in FontWeight]: string } = {\n\tnormal: 'font-normal',\n\tmedium: 'font-medium',\n\tbold: 'font-bold',\n};\n\ntype FontColor = Extract<\n\tColor,\n\t| 'primary'\n\t| 'primary-focus'\n\t| 'primary-content'\n\t| 'secondary'\n\t| 'secondary-focus'\n\t| 'secondary-content'\n\t| 'accent'\n\t| 'accent-focus'\n\t| 'accent-content'\n\t| 'neutral'\n\t| 'neutral-focus'\n\t| 'neutral-content'\n\t| 'info'\n\t| 'info-content'\n\t| 'success'\n\t| 'success-content'\n\t| 'warning'\n\t| 'warning-content'\n\t| 'error'\n\t| 'error-content'\n>;\nconst FONT_COLOR_MAP: { [key in FontColor]: string } = {\n\tprimary: 'text-primary',\n\t'primary-focus': 'text-primary-focus',\n\t'primary-content': 'text-primary-content',\n\tsecondary: 'text-secondary',\n\t'secondary-focus': 'text-secondary-focus',\n\t'secondary-content': 'text-secondary-content',\n\taccent: 'text-accent',\n\t'accent-focus': 'text-accent-focus',\n\t'accent-content': 'text-accent-content',\n\tneutral: 'text-neutral',\n\t'neutral-focus': 'text-neutral-focus',\n\t'neutral-content': 'text-neutral-content',\n\tinfo: 'text-info',\n\t'info-content': 'text-info-content',\n\tsuccess: 'text-success',\n\t'success-content': 'text-success-content',\n\twarning: 'text-warning',\n\t'warning-content': 'text-warning-content',\n\terror: 'text-error',\n\t'error-content': 'text-error-content',\n};\n\nconst LINE_HEIGHTS = ['none', 'tight', 'snug', 'normal', 'relaxed', 'loose'] as const;\nexport type LineHeight = (typeof LINE_HEIGHTS)[number];\nconst LINE_HEIGHT_MAP: { [key in LineHeight]: string } = {\n\tnone: 'xs:leading-none sm:leading-none md:leading-none lg:leading-none xl:leading-none',\n\ttight: 'xs:leading-tight sm:leading-tight md:leading-tight lg:leading-tight xl:leading-tight',\n\tsnug: 'xs:leading-snug sm:leading-snug md:leading-snug lg:leading-snug xl:leading-snug',\n\tnormal: 'xs:leading-normal sm:leading-normal md:leading-normal lg:leading-normal xl:leading-normal',\n\trelaxed: 'xs:leading-relaxed sm:leading-relaxed md:leading-relaxed lg:leading-relaxed xl:leading-relaxed',\n\tloose: 'xs:leading-loose sm:leading-loose md:leading-loose lg:leading-loose xl:leading-loose',\n};\n\ntype ElementType = keyof Pick<IntrinsicElements, 'div' | 'p' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'span'>;\n\nexport type TypographyProps<C extends ElementType> = {\n\tas?: C;\n\tsize?: FontSize;\n\tweight?: FontWeight;\n\tcolor?: FontColor;\n\tlineHeight?: LineHeight;\n} & ComponentPropsWithoutRef<C>;\n\nexport function Typography<C extends ElementType = 'p'>({\n\tas,\n\tsize = 'md',\n\tweight = 'normal',\n\tcolor = 'neutral',\n\tlineHeight = 'normal',\n\tclassName,\n\tchildren,\n\t...props\n}: TypographyProps<C>) {\n\tconst Component = as || 'p';\n\treturn (\n\t\t<Component\n\t\t\tclassName={twMerge(\n\t\t\t\tclassNames(\n\t\t\t\t\tFONT_SIZE_MAP[size],\n\t\t\t\t\tFONT_WEIGHT_MAP[weight],\n\t\t\t\t\tFONT_COLOR_MAP[color],\n\t\t\t\t\tLINE_HEIGHT_MAP[lineHeight],\n\t\t\t\t\tclassName,\n\t\t\t\t),\n\t\t\t)}\n\t\t\t{...props}\n\t\t>\n\t\t\t{children}\n\t\t</Component>\n\t);\n}\n"],"names":["FONT_SIZE_MAP","FONT_WEIGHT_MAP","FONT_COLOR_MAP","LINE_HEIGHT_MAP","Typography","as","size","weight","color","lineHeight","className","children","props","jsx","twMerge","classNames"],"mappings":"iIAQA,MAAAA,EAAA,CAAqD,MAAA,qDAC7C,MAAA,qDACA,MAAA,yCACA,MAAA,0BACA,GAAA,UACH,GAAA,UACA,GAAA,YACA,GAAA,UACA,GAAA,SAEL,EAIAC,EAAA,CAAyD,OAAA,cAChD,OAAA,cACA,KAAA,WAET,EAyBAC,EAAA,CAAuD,QAAA,eAC7C,gBAAA,qBACQ,kBAAA,uBACE,UAAA,iBACR,kBAAA,uBACQ,oBAAA,yBACE,OAAA,cACb,eAAA,oBACQ,iBAAA,sBACE,QAAA,eACT,gBAAA,qBACQ,kBAAA,uBACE,KAAA,YACb,eAAA,oBACU,QAAA,eACP,kBAAA,uBACU,QAAA,eACV,kBAAA,uBACU,MAAA,aACZ,gBAAA,oBAER,EAIAC,EAAA,CAAyD,KAAA,kFAClD,MAAA,uFACC,KAAA,kFACD,OAAA,4FACE,QAAA,iGACC,MAAA,sFAEV,EAYO,SAAAC,EAAA,CAAiD,GAAAC,EACvD,KAAAC,EAAA,KACO,OAAAC,EAAA,SACE,MAAAC,EAAA,UACD,WAAAC,EAAA,SACK,UAAAC,EACb,SAAAC,EACA,GAAAC,CAED,EAAA,CAEC,OAAAC,EADAR,GAAA,IAEE,CAAA,UAAAS,EACWC,EACVf,EAAAM,CAAA,EACmBL,EAAAM,CAAA,EACIL,EAAAM,CAAA,EACFL,EAAAM,CAAA,EACMC,CAC1B,CACD,EACD,GAAAE,EACI,SAAAD,CAEH,CAAA,CAGJ"}