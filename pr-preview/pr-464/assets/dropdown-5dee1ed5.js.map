{"version":3,"file":"dropdown-5dee1ed5.js","sources":["../../src/components/dropdown/dropdown-item.tsx","../../src/components/dropdown/dropdown-label.tsx","../../src/components/dropdown/dropdown.tsx"],"sourcesContent":["import { PropsWithChildren } from 'react';\n\ninterface DropdownItemProps {\n\thref?: string;\n\tonClick?: () => void;\n}\n\nexport function DropdownItem({ children, href, onClick }: PropsWithChildren<DropdownItemProps>) {\n\tswitch (typeof children) {\n\t\tcase 'string':\n\t\t\treturn (\n\t\t\t\t<li>\n\t\t\t\t\t<a href={href} onClick={onClick}>\n\t\t\t\t\t\t{children}\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\t\t\t);\n\t\tdefault:\n\t\t\treturn <li>{children}</li>;\n\t}\n}\n","import { PropsWithChildren } from 'react';\n\ninterface DropdownLabelProps {}\n\nexport function DropdownLabel({ children, ...props }: PropsWithChildren<DropdownLabelProps>) {\n\treturn (\n\t\t<label tabIndex={0} className=\"\">\n\t\t\t{children}\n\t\t</label>\n\t);\n}\n","import classNames from 'classnames';\nimport { Children, isValidElement, PropsWithChildren, ReactElement } from 'react';\nimport { DefaultComponentProps } from '../index';\nimport { DropdownItem } from './dropdown-item';\nimport { DropdownLabel } from './dropdown-label';\n\ninterface DropdownProps extends DefaultComponentProps {\n\topenOnHover?: boolean;\n\tisOpen?: boolean;\n\tposition?: 'top' | 'bottom' | 'left' | 'right';\n\talignEnd?: boolean;\n}\n\nexport function Dropdown({ children, ...props }: PropsWithChildren<DropdownProps>) {\n\tlet label: ReactElement;\n\tconst items: ReactElement[] = [];\n\n\tChildren.forEach(children, (child) => {\n\t\tif (!isValidElement(child)) throw new Error('Invalid child element');\n\n\t\tswitch (child.type) {\n\t\t\tcase DropdownLabel:\n\t\t\t\tlabel = child;\n\t\t\t\tbreak;\n\t\t\tcase DropdownItem:\n\t\t\t\titems.push(child);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error('Invalid child element');\n\t\t}\n\t});\n\n\treturn (\n\t\t<div\n\t\t\tclassName={classNames(\n\t\t\t\t'dropdown',\n\t\t\t\t{\n\t\t\t\t\t'dropdown-hover': props.openOnHover,\n\t\t\t\t\t'dropdown-open': props.isOpen,\n\t\t\t\t\t[`dropdown-${props.position}`]: props.position,\n\t\t\t\t\t'dropdown-end': props.alignEnd,\n\t\t\t\t},\n\t\t\t\tprops.className\n\t\t\t)}\n\t\t>\n\t\t\t{label}\n\t\t\t<ul tabIndex={0} className={classNames('dropdown-content menu shadow bg-base-100 rounded-box mt-4 z-50')}>\n\t\t\t\t{items.map((item) => item)}\n\t\t\t</ul>\n\t\t</div>\n\t);\n}\n\nDropdown.Label = DropdownLabel;\nDropdown.Item = DropdownItem;\n"],"names":["DropdownItem","children","href","onClick","jsx","DropdownLabel","props","Dropdown","label","items","Children","child","isValidElement","jsxs","classNames","item"],"mappings":"8FAOO,SAAAA,EAAA,CAAA,SAAAC,EAAA,KAAAC,EAAA,QAAAC,CAAA,EAAA,CACN,OAAA,OAAAF,EAAA,CAAyB,IAAA,SAEvB,OAAAG,EAAA,KAAA,CAAA,SAAAA,EAAA,IAAA,CAAA,KAAAF,EAAA,QAAAC,EAAA,SAAAF,CAAA,CAAA,CAAA,CAAA,EAKC,QAGD,OAAAG,EAAA,KAAA,CAAA,SAAAH,CAAA,CAAA,CAAqB,CAExB,gSChBO,SAAAI,EAAA,CAAA,SAAAJ,EAAA,GAAAK,GAAA,CACN,OAAAF,EAAA,QAAA,CAAA,SAAA,EAAA,UAAA,GAAA,SAAAH,CAAA,CAAA,CAKD,+GCGO,SAAAM,EAAA,CAAA,SAAAN,EAAA,GAAAK,GAAA,CACN,IAAAE,EACA,MAAAC,EAAA,CAAA,EAEAC,OAAAA,EAAAA,SAAA,QAAAT,EAAAU,GAAA,CACC,GAAA,CAAAC,EAAA,eAAAD,CAAA,EAA4B,MAAA,IAAA,MAAA,uBAAA,EAE5B,OAAAA,EAAA,KAAA,CAAoB,KAAAN,EAElBG,EAAAG,EACA,MAAA,KAAAX,EAEAS,EAAA,KAAAE,CAAA,EACA,MAAA,QAEA,MAAA,IAAA,MAAA,uBAAA,CAAuC,CACzC,CAAA,EAGDE,EACC,MAAC,CAAA,UAAAC,EACW,WACV,CACA,iBAAAR,EAAA,YACyB,gBAAAA,EAAA,OACD,CAAA,YAAAA,EAAA,UAAA,EAAAA,EAAA,SACe,eAAAA,EAAA,QAChB,EACvBA,EAAA,SACM,EACP,SAAA,CAECE,EAAAJ,EAAA,KAAA,CAAA,SAAA,EAAA,UAAAU,EAAA,gEAAA,EAAA,SAAAL,EAAA,IAAAM,GAAAA,CAAA,CAAA,CAAA,CAGD,CAAA,CAAA,CAGH,CAEAR,EAAA,MAAAF,EACAE,EAAA,KAAAP"}