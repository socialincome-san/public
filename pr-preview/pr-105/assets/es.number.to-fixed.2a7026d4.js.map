{"version":3,"file":"es.number.to-fixed.2a7026d4.js","sources":["../../../node_modules/core-js/internals/string-repeat.js","../../../node_modules/core-js/modules/es.number.to-fixed.js"],"sourcesContent":["'use strict';\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\nvar toString = require('../internals/to-string');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nvar $RangeError = RangeError;\n\n// `String.prototype.repeat` method implementation\n// https://tc39.es/ecma262/#sec-string.prototype.repeat\nmodule.exports = function repeat(count) {\n  var str = toString(requireObjectCoercible(this));\n  var result = '';\n  var n = toIntegerOrInfinity(count);\n  if (n < 0 || n == Infinity) throw $RangeError('Wrong number of repetitions');\n  for (;n > 0; (n >>>= 1) && (str += str)) if (n & 1) result += str;\n  return result;\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\nvar thisNumberValue = require('../internals/this-number-value');\nvar $repeat = require('../internals/string-repeat');\nvar fails = require('../internals/fails');\n\nvar $RangeError = RangeError;\nvar $String = String;\nvar floor = Math.floor;\nvar repeat = uncurryThis($repeat);\nvar stringSlice = uncurryThis(''.slice);\nvar nativeToFixed = uncurryThis(1.0.toFixed);\n\nvar pow = function (x, n, acc) {\n  return n === 0 ? acc : n % 2 === 1 ? pow(x, n - 1, acc * x) : pow(x * x, n / 2, acc);\n};\n\nvar log = function (x) {\n  var n = 0;\n  var x2 = x;\n  while (x2 >= 4096) {\n    n += 12;\n    x2 /= 4096;\n  }\n  while (x2 >= 2) {\n    n += 1;\n    x2 /= 2;\n  } return n;\n};\n\nvar multiply = function (data, n, c) {\n  var index = -1;\n  var c2 = c;\n  while (++index < 6) {\n    c2 += n * data[index];\n    data[index] = c2 % 1e7;\n    c2 = floor(c2 / 1e7);\n  }\n};\n\nvar divide = function (data, n) {\n  var index = 6;\n  var c = 0;\n  while (--index >= 0) {\n    c += data[index];\n    data[index] = floor(c / n);\n    c = (c % n) * 1e7;\n  }\n};\n\nvar dataToString = function (data) {\n  var index = 6;\n  var s = '';\n  while (--index >= 0) {\n    if (s !== '' || index === 0 || data[index] !== 0) {\n      var t = $String(data[index]);\n      s = s === '' ? t : s + repeat('0', 7 - t.length) + t;\n    }\n  } return s;\n};\n\nvar FORCED = fails(function () {\n  return nativeToFixed(0.00008, 3) !== '0.000' ||\n    nativeToFixed(0.9, 0) !== '1' ||\n    nativeToFixed(1.255, 2) !== '1.25' ||\n    nativeToFixed(1000000000000000128.0, 0) !== '1000000000000000128';\n}) || !fails(function () {\n  // V8 ~ Android 4.3-\n  nativeToFixed({});\n});\n\n// `Number.prototype.toFixed` method\n// https://tc39.es/ecma262/#sec-number.prototype.tofixed\n$({ target: 'Number', proto: true, forced: FORCED }, {\n  toFixed: function toFixed(fractionDigits) {\n    var number = thisNumberValue(this);\n    var fractDigits = toIntegerOrInfinity(fractionDigits);\n    var data = [0, 0, 0, 0, 0, 0];\n    var sign = '';\n    var result = '0';\n    var e, z, j, k;\n\n    // TODO: ES2018 increased the maximum number of fraction digits to 100, need to improve the implementation\n    if (fractDigits < 0 || fractDigits > 20) throw $RangeError('Incorrect fraction digits');\n    // eslint-disable-next-line no-self-compare -- NaN check\n    if (number != number) return 'NaN';\n    if (number <= -1e21 || number >= 1e21) return $String(number);\n    if (number < 0) {\n      sign = '-';\n      number = -number;\n    }\n    if (number > 1e-21) {\n      e = log(number * pow(2, 69, 1)) - 69;\n      z = e < 0 ? number * pow(2, -e, 1) : number / pow(2, e, 1);\n      z *= 0x10000000000000;\n      e = 52 - e;\n      if (e > 0) {\n        multiply(data, 0, z);\n        j = fractDigits;\n        while (j >= 7) {\n          multiply(data, 1e7, 0);\n          j -= 7;\n        }\n        multiply(data, pow(10, j, 1), 0);\n        j = e - 1;\n        while (j >= 23) {\n          divide(data, 1 << 23);\n          j -= 23;\n        }\n        divide(data, 1 << j);\n        multiply(data, 1, 1);\n        divide(data, 2);\n        result = dataToString(data);\n      } else {\n        multiply(data, 0, z);\n        multiply(data, 1 << -e, 0);\n        result = dataToString(data) + repeat('0', fractDigits);\n      }\n    }\n    if (fractDigits > 0) {\n      k = result.length;\n      result = sign + (k <= fractDigits\n        ? '0.' + repeat('0', fractDigits - k) + result\n        : stringSlice(result, 0, k - fractDigits) + '.' + stringSlice(result, k - fractDigits));\n    } else {\n      result = sign + result;\n    } return result;\n  }\n});\n"],"names":["toIntegerOrInfinity","require$$0","toString","require$$1","requireObjectCoercible","require$$2","$RangeError","stringRepeat","count","str","result","n","$","uncurryThis","thisNumberValue","require$$3","$repeat","require$$4","fails","require$$5","$String","floor","repeat","stringSlice","nativeToFixed","pow","x","acc","log","x2","multiply","data","c","index","c2","divide","dataToString","s","t","FORCED","fractionDigits","number","fractDigits","sign","e","z","j","k"],"mappings":"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"}