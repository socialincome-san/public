{"version":3,"file":"Theme.stories-81a0b412.js","sources":["../../src/react-daisyui/src/Theme/ThemeContext.ts","../../src/react-daisyui/src/Theme/utils.ts","../../src/react-daisyui/src/Theme/Theme.tsx","../../src/react-daisyui/src/Theme/ThemeItem.tsx","../../src/react-daisyui/src/defaultThemes.ts","../../src/react-daisyui/src/Theme/useTheme.ts"],"sourcesContent":["import React from 'react'\n\nimport { DataTheme } from '../types'\n\nexport interface IThemeContext {\n  theme: DataTheme\n  setTheme: (theme: DataTheme) => void\n}\n\nexport const ThemeContext = React.createContext<IThemeContext>({\n  theme: 'light',\n  setTheme: () => {},\n})\n","import React from 'react'\n\nexport const getThemeFromClosestAncestor = (\n  ref: React.RefObject<HTMLElement>\n) => {\n  if (!ref.current) return\n  const matches = ref.current.closest('[data-theme]')\n  if (matches) return matches.getAttribute('data-theme')\n}\n","import React, { MutableRefObject, useEffect, useRef, useState } from 'react'\nimport { defaultTheme } from '../constants'\n\nimport { DataTheme, IComponentBaseProps } from '../types'\nimport { ThemeContext } from './ThemeContext'\nimport { getThemeFromClosestAncestor } from './utils'\n\nexport type ThemeProps = Omit<\n  React.HTMLAttributes<HTMLDivElement>,\n  'onChange'\n> &\n  IComponentBaseProps & {\n    onChange?: (theme: DataTheme) => void\n  }\n\nconst Theme = React.forwardRef<HTMLDivElement, ThemeProps>(\n  (\n    { children, dataTheme, onChange, className, ...props },\n    ref\n  ): JSX.Element => {\n    // Either use provided ref or create a new ref\n    const themeRef = useRef<HTMLDivElement>(\n      (ref as MutableRefObject<HTMLDivElement>)?.current\n    )\n\n    const closestAncestorTheme = getThemeFromClosestAncestor(themeRef)\n\n    // If no theme is provided, use the closest ancestor theme, if no ancestor theme, fallback to default theme (defined in constants)\n    const [theme, setTheme] = useState<DataTheme>(\n      dataTheme || closestAncestorTheme || defaultTheme\n    )\n\n    const handleThemeChange = (theme: DataTheme) => {\n      // Fire custom onChange, if provided. ie, user provided function to store theme in session/local storage\n      onChange && onChange(theme)\n      // Update state/context\n      setTheme(theme)\n    }\n\n    // Properly handle changes to theme prop on Theme component\n    useEffect(() => {\n      if (dataTheme !== theme) {\n        dataTheme && handleThemeChange(dataTheme)\n      }\n    }, [dataTheme])\n\n    return (\n      <ThemeContext.Provider value={{ theme, setTheme: handleThemeChange }}>\n        <div {...props} data-theme={theme} className={className} ref={themeRef}>\n          {children}\n        </div>\n      </ThemeContext.Provider>\n    )\n  }\n)\nexport default Theme\n","import React from 'react'\nimport clsx from 'clsx'\nimport { twMerge } from 'tailwind-merge'\n\nexport type ThemeItemProps = React.HTMLAttributes<HTMLDivElement> & {\n  dataTheme: string\n  selected?: boolean\n}\n\nconst ThemeItem = ({\n  selected,\n  children,\n  dataTheme,\n  className,\n  ...props\n}: ThemeItemProps) => {\n  const classes = twMerge(\n    className,\n    'border-base-content/20 hover:border-base-content/40 outline-base-content\\\n        overflow-hidden rounded-lg border outline-2 outline-offset-2',\n    clsx({\n      outline: selected,\n    })\n  )\n\n  return (\n    <div {...props} data-theme={dataTheme} className={classes}>\n      <div className=\"bg-base-100 text-base-content w-full cursor-pointer font-sans\">\n        <div className=\"grid grid-cols-5 grid-rows-3\">\n          <div className=\"bg-base-200 col-start-1 row-span-2 row-start-1\" />\n          <div className=\"bg-base-300 col-start-1 row-start-3\" />\n          <div className=\"bg-base-100 col-span-4 col-start-2 row-span-3 row-start-1 flex flex-col gap-1 p-2\">\n            <div className=\"font-bold\">{dataTheme}</div>\n            <div className=\"flex flex-wrap gap-1\">\n              <div className=\"bg-primary flex aspect-square w-5 items-center justify-center rounded lg:w-6\">\n                <div className=\"text-primary-content text-sm font-bold\">A</div>\n              </div>\n\n              <div className=\"bg-secondary flex aspect-square w-5 items-center justify-center rounded lg:w-6\">\n                <div className=\"text-primary-content text-sm font-bold\">A</div>\n              </div>\n\n              <div className=\"bg-accent flex aspect-square w-5 items-center justify-center rounded lg:w-6\">\n                <div className=\"text-primary-content text-sm font-bold\">A</div>\n              </div>\n\n              <div className=\"bg-neutral flex aspect-square w-5 items-center justify-center rounded lg:w-6\">\n                <div className=\"text-primary-content text-sm font-bold\">A</div>\n              </div>\n            </div>\n            {children && <div className=\"my-2\">{children}</div>}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default ThemeItem\n","export const DEFAULT_THEMES = [\n  'light',\n  'dark',\n  'cupcake',\n  'bumblebee',\n  'emerald',\n  'corporate',\n  'synthwave',\n  'retro',\n  'cyberpunk',\n  'valentine',\n  'halloween',\n  'garden',\n  'forest',\n  'aqua',\n  'lofi',\n  'pastel',\n  'fantasy',\n  'wireframe',\n  'black',\n  'luxury',\n  'dracula',\n  'cmyk',\n  'autumn',\n  'business',\n  'acid',\n  'lemonade',\n  'night',\n  'coffee',\n  'winter'\n] as const\n","import { useContext, useEffect } from 'react'\nimport { DataTheme } from '../types'\nimport { ThemeContext } from './ThemeContext'\n\nexport const useTheme = (value?: DataTheme) => {\n  const { theme, setTheme } = useContext(ThemeContext)\n\n  useEffect(() => {\n    if (value && theme !== value) {\n      setTheme(value)\n    }\n  }, [value])\n\n  return { theme, setTheme }\n}\n"],"names":["ThemeContext","React","getThemeFromClosestAncestor","ref","matches","Theme","children","dataTheme","onChange","className","props","themeRef","useRef","closestAncestorTheme","theme","setTheme","useState","defaultTheme","handleThemeChange","theme2","useEffect","jsx","Theme$1","ThemeItem","selected","classes","twMerge","clsx","jsxs","ThemeItem$1","DEFAULT_THEMES","useTheme","value","useContext"],"mappings":"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"}