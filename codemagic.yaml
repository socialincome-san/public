definitions:
  instance_mac_mini_m2: &instance_mac_mini_m2
    instance_type: mac_mini_m2
    max_build_duration: 30

  env_versions: &env_versions
    flutter: 3.32.8
    xcode: 16.4
    cocoapods: 1.16.2
    java: 21

  scripts:
    - &verify_flutter_version
      name: Verify Flutter version
      script: |
        # Verify Flutter version
        echo "Verify Flutter version..."

        REQUIRED_VERSION=$(grep flutter .tool-versions | awk '{print $2}')
        echo "REQUIRED_VERSION: $REQUIRED_VERSION"
        CURRENT_VERSION=$(flutter --version | grep -m 1 "^Flutter" | awk '{print $2}')
        echo "CURRENT_VERSION: $CURRENT_VERSION"

        if [ "$CURRENT_VERSION" != "$REQUIRED_VERSION" ]; then
            echo "Error: Flutter version $REQUIRED_VERSION is required (current: $CURRENT_VERSION)"
            exit 1
        else
            echo "Required version: $REQUIRED_VERSION == Current version: $CURRENT_VERSION"
            echo "Flutter version is correct"
        fi
      working_directory: recipients_app

workflows:
  android-staging-firebase-app-distribution-workflow:
    name: Android Staging (Firebase App Distribution)
    <<: *instance_mac_mini_m2

    environment:
      android_signing:
        - social_income_upload_keystore.jks
      vars:
        PACKAGE_NAME: "org.socialincome.app.stage"
        GOOGLE_PLAY_TRACK: internal
      groups:
        - slack
        - app-config-stage
        - firebase
        - google-play # <-- (Includes GOOGLE_PLAY_SERVICE_ACCOUNT_CREDENTIALS)
      <<: *env_versions

    cache:
      cache_paths:
        - $HOME/.gradle/caches
        - $HOME/.pub-cache

    scripts:
      - name: Set build number automatically from Google Play
        script: |
          #!/usr/bin/env sh
          set -e # exit on first failed command

          # Get the latest build number from Google Play and increment it by 1
          NEW_BUILD_NUMBER=$(($(google-play get-latest-build-number --package-name "$PACKAGE_NAME" --tracks="$GOOGLE_PLAY_TRACK") + 1))
          if [ -z "$NEW_BUILD_NUMBER" ]; then
            echo "Missing build number!"
            exit 1
          fi

          cd $CM_BUILD_DIR/recipients_app
          echo "Change the build number in pubspec.yaml"
          sed -i '' -E "s/(version: [0-9]+\.[0-9]+\.[0-9]+\+)[0-9]+/\1$NEW_BUILD_NUMBER/" "./pubspec.yaml"
      - name: Load Firebase Options file
        script: |
          #!/usr/bin/env sh
          set -e # exit on first failed command

          cd $CM_BUILD_DIR/recipients_app/lib
          echo $FIREBASE_OPTIONS | base64 --decode > firebase_options_stage.dart
      - name: Load Firebase configuration
        script: |
          #!/usr/bin/env sh
          set -e # exit on first failed command

          cd $CM_BUILD_DIR/recipients_app/android/app/src/stage
          echo $ANDROID_FIREBASE_SECRET > google-services.json
      # - name: Decode Google credentials
      #   script: |
      #     echo $FIREBASE_APP_DISTRIBUTION_SERVICE_ACCOUNT > $GOOGLE_APPLICATION_CREDENTIALS
      # Define reusable section 'verify_flutter_version'
      - *verify_flutter_version
      - name: Get Flutter packages
        script: |
          #!/usr/bin/env sh
          set -e # exit on first failed command

          flutter pub get
        working_directory: recipients_app
      - name: Build AAB with Flutter
        script: |
          #!/usr/bin/env sh
          set -e # exit on first failed command

          # Build the Flutter app
          flutter build appbundle --release \
            --flavor stage \
            -t lib/main_stage.dart \
            --dart-define=SURVEY_BASE_URL=$SURVEY_BASE_URL \
            --dart-define=SENTRY_URL=$SENTRY_URL \
            --dart-define=TWILIO_ACCOUNT_SID=$TWILIO_ACCOUNT_SID \
            --dart-define=TWILIO_AUTH_TOKEN=$TWILIO_AUTH_TOKEN \
            --dart-define=TWILIO_NUMBER=$TWILIO_NUMBER \
            --dart-define=TWILIO_SERVICE_SID=$TWILIO_SERVICE_SID \
        working_directory: recipients_app
      - name: Generate universal APK from AAB
        script: |
          #!/usr/bin/env sh
          set -e # exit on first failed command

          android-app-bundle build-universal-apk \
            --bundle 'build/**/outputs/bundle/stageRelease/**/*.aab' \
            --ks $CM_KEYSTORE_PATH \
            --ks-pass $CM_KEYSTORE_PASSWORD \
            --ks-key-alias $CM_KEY_ALIAS \
            --key-pass $CM_KEY_PASSWORD \
        working_directory: recipients_app

    artifacts:
      - recipients_app/build/**/outputs/bundle/stageRelease/**/*.apk
      - recipients_app/build/**/outputs/bundle/stageRelease/**/*.aab
      - recipients_app/build/**/outputs/**/mapping.txt

    publishing:
      google_play:
        credentials: $GOOGLE_PLAY_SERVICE_ACCOUNT_CREDENTIALS
        track: internal
        submit_as_draft: false
      firebase:
        firebase_service_account: $FIREBASE_APP_DISTRIBUTION_SERVICE_ACCOUNT
        android:
          app_id: 1:51495651779:android:08ef862a962bc041185576
          groups:
            - internal-testers
          artifact_type: "apk"

      # Notifications
      email: # See the following link for details about email publishing - https://docs.codemagic.io/publishing-yaml/distribution/#email
        recipients:
          - sandino@socialincome.org
        notify:
          success: true # To receive a notification when a build succeeds
          failure: false # To not receive a notification when a build fails
      slack: # See the following link about how to connect your Slack account - https://docs.codemagic.io/publishing-yaml/distribution/#slack
        channel: $SLACK_CHANNEL_NAME
        notify_on_build_start: false
        notify:
          success: true # To receive a notification when a build succeeds
          failure: true # To not receive a notification when a build fails

  android-production-workflow:
    name: Android Production
    <<: *instance_mac_mini_m2

    environment:
      android_signing:
        - social_income_upload_keystore.jks
      vars:
        PACKAGE_NAME: "org.socialincome.app"
        GOOGLE_PLAY_TRACK: internal
      groups:
        - slack
        - app-config-prod
        - google-play # <-- (Includes GOOGLE_PLAY_SERVICE_ACCOUNT_CREDENTIALS)
      <<: *env_versions

    cache:
      cache_paths:
        - $HOME/.gradle/caches
        - $HOME/.pub-cache

    scripts:
      - name: Set build number automatically from Google Play
        script: |
          #!/usr/bin/env sh
          set -e # exit on first failed command

          # Get the latest build number from Google Play and increment it by 1
          NEW_BUILD_NUMBER=$(($(google-play get-latest-build-number --package-name "$PACKAGE_NAME" --tracks="$GOOGLE_PLAY_TRACK") + 1))
          if [ -z "$NEW_BUILD_NUMBER" ]; then
            echo "Missing build number!"
            exit 1
          fi

          cd $CM_BUILD_DIR/recipients_app
          echo "Change the build number in pubspec.yaml"
          sed -i '' -E "s/(version: [0-9]+\.[0-9]+\.[0-9]+\+)[0-9]+/\1$NEW_BUILD_NUMBER/" "./pubspec.yaml"
      - name: Load Firebase Options file
        script: |
          #!/usr/bin/env sh
          set -e # exit on first failed command

          cd $CM_BUILD_DIR/recipients_app/lib
          echo $FIREBASE_OPTIONS | base64 --decode > firebase_options_prod.dart
      - name: Load Firebase configuration
        script: |
          #!/usr/bin/env sh
          set -e # exit on first failed command

          cd $CM_BUILD_DIR/recipients_app/android/app/src/prod
          echo $ANDROID_FIREBASE_SECRET > google-services.json
      - *verify_flutter_version
      - name: Get Flutter packages
        script: |
          #!/usr/bin/env sh
          set -e # exit on first failed command

          flutter pub get
        working_directory: recipients_app
      - name: Build AAB with Flutter
        script: |
          #!/usr/bin/env sh
          set -e # exit on first failed command

          # Build the Flutter AAB app
          flutter build appbundle --release \
            --flavor prod \
            -t lib/main_prod.dart \
            --dart-define=SURVEY_BASE_URL=$SURVEY_BASE_URL \
            --dart-define=SENTRY_URL=$SENTRY_URL \
            --dart-define=TWILIO_ACCOUNT_SID=$TWILIO_ACCOUNT_SID \
            --dart-define=TWILIO_AUTH_TOKEN=$TWILIO_AUTH_TOKEN \
            --dart-define=TWILIO_NUMBER=$TWILIO_NUMBER \
            --dart-define=TWILIO_SERVICE_SID=$TWILIO_SERVICE_SID
        working_directory: recipients_app

    artifacts:
      - recipients_app/build/**/outputs/bundle/prodRelease/**/*.aab
      - recipients_app/build/**/outputs/**/mapping.txt

    publishing:
      google_play:
        credentials: $GOOGLE_PLAY_SERVICE_ACCOUNT_CREDENTIALS
        track: internal
        submit_as_draft: false

      # Notifications
      email: # See the following link for details about email publishing - https://docs.codemagic.io/publishing-yaml/distribution/#email
        recipients:
          #- sandino@socialincome.org
          - karin@karinberg.de
        notify:
          success: true # To receive a notification when a build succeeds
          failure: false # To not receive a notification when a build fails
      slack: # See the following link about how to connect your Slack account - https://docs.codemagic.io/publishing-yaml/distribution/#slack
        channel: $SLACK_CHANNEL_NAME
        notify_on_build_start: false
        notify:
          success: true # To receive a notification when a build succeeds
          failure: true # To not receive a notification when a build fails

  ios-staging-testflight-workflow:
    name: iOS Staging (Test Flight)
    <<: *instance_mac_mini_m2

    integrations:
      app_store_connect: Social Income Recipient App

    environment:
      ios_signing:
        distribution_type: app_store
        bundle_identifier: org.socialincome.app.stage
      groups:
        - slack
        - app-config-stage
      vars:
        APP_STORE_APPLE_ID: 6464113329 # Apple ID of App "Stage Social Income"
      <<: *env_versions

    cache:
      cache_paths:
        - $HOME/.pub-cache
        - $HOME/Library/Caches/CocoaPods

    scripts:
      - name: Set build number automatically from App Store Connect
        script: |
          #!/usr/bin/env sh
          set -e # exit on first failed command

          # Get the latest build number from Google Play and increment it by 1
          NEW_BUILD_NUMBER=$(($(app-store-connect get-latest-app-store-build-number "$APP_STORE_APPLE_ID") + 1))
          if [ -z "$NEW_BUILD_NUMBER" ]; then
            echo "Missing build number!"
            exit 1
          fi

          cd $CM_BUILD_DIR/recipients_app
          echo "Change the build number in pubspec.yaml"
          sed -i '' -E "s/(version: [0-9]+\.[0-9]+\.[0-9]+\+)[0-9]+/\1$NEW_BUILD_NUMBER/" "./pubspec.yaml"
      - name: Load Firebase Options file
        script: |
          #!/usr/bin/env sh
          set -e # exit on first failed command

          cd $CM_BUILD_DIR/recipients_app/lib
          echo $FIREBASE_OPTIONS | base64 --decode > firebase_options_stage.dart
      - name: Load Firebase configuration
        script: |
          #!/usr/bin/env sh
          set -e # exit on first failed command

          cd $CM_BUILD_DIR/recipients_app/ios/Runner
          echo $IOS_FIREBASE_SECRET > GoogleService-Info.plist
      - name: Set up code signing settings on Xcode project
        script: |
          #!/usr/bin/env sh
          set -e # exit on first failed command

          xcode-project use-profiles \
            --archive-method=app-store \
            --export-options-plist=$CM_BUILD_DIR/recipients_app/ios/export_options.plist

          # Print the export options plist
          more $CM_BUILD_DIR/recipients_app/ios/export_options.plist
      - *verify_flutter_version
      - name: Get Flutter packages & Install pods
        script: |
          #!/usr/bin/env sh
          set -e # exit on first failed command

          flutter pub get
          find . -name "Podfile" -execdir pod install \;
        working_directory: recipients_app
      - name: Flutter build ipa
        script: |
          #!/usr/bin/env sh
          set -e # exit on first failed command

          # Build the Flutter iOS app
          flutter build ipa --release \
            --flavor stage \
            -t lib/main_stage.dart \
            --dart-define=SURVEY_BASE_URL=$SURVEY_BASE_URL \
            --dart-define=SENTRY_URL=$SENTRY_URL \
            --dart-define=TWILIO_ACCOUNT_SID=$TWILIO_ACCOUNT_SID \
            --dart-define=TWILIO_AUTH_TOKEN=$TWILIO_AUTH_TOKEN \
            --dart-define=TWILIO_NUMBER=$TWILIO_NUMBER \
            --dart-define=TWILIO_SERVICE_SID=$TWILIO_SERVICE_SID \
            --export-options-plist=$CM_BUILD_DIR/recipients_app/ios/export_options.plist
        working_directory: recipients_app

    artifacts:
      - recipients_app/build/ios/ipa/*.ipa
      - /tmp/xcodebuild_logs/*.log

    publishing:
      # Publish to Apple's Testflight via AppStore Connect
      app_store_connect:
        # Use referenced App Store Connect API key from above to authenticate binary upload
        auth: integration
        # Whether or not to submit the uploaded build to TestFlight beta review.
        # Note: This action is performed during post-processing.
        submit_to_testflight: true

      # Notifications
      email: # See the following link for details about email publishing - https://docs.codemagic.io/publishing-yaml/distribution/#email
        recipients:
          - sandino@socialincome.org
        notify:
          success: true # To receive a notification when a build succeeds
          failure: false # To not receive a notification when a build fails
      slack: # See the following link about how to connect your Slack account - https://docs.codemagic.io/publishing-yaml/distribution/#slack
        channel: $SLACK_CHANNEL_NAME
        notify_on_build_start: false
        notify:
          success: true # To receive a notification when a build succeeds
          failure: true # To not receive a notification when a build fails

  ios-staging-firebase-app-distribution-workflow:
    name: iOS Staging (Firebase App Distribution)
    <<: *instance_mac_mini_m2

    integrations:
      app_store_connect: Social Income Recipient App

    environment:
      ios_signing:
        distribution_type: ad_hoc
        bundle_identifier: org.socialincome.app.stage
      groups:
        - slack
        - app-config-stage
        - firebase
      vars:
        APP_STORE_APPLE_ID: 6464113329 # Apple ID of App "Stage Social Income"
      <<: *env_versions

    cache:
      cache_paths:
        - $HOME/.pub-cache
        - $HOME/Library/Caches/CocoaPods

    scripts:
      # - name: Set up keychain to be used for code signing using Codemagic CLI 'keychain' command
      #   script: keychain initialize
      # - name: Fetch signing files
      #   script: |
      #     app-store-connect fetch-signing-files "org.socialincome.app.stage" \
      #       --type IOS_APP_ADHOC \
      #       --create
      # - name: Set up signing certificate
      #   script: keychain add-certificates
      - name: Set build number automatically from App Store Connect
        script: |
          #!/usr/bin/env sh
          set -e # exit on first failed command

          # Get the latest build number from Google Play and increment it by 1
          NEW_BUILD_NUMBER=$(($(app-store-connect get-latest-app-store-build-number "$APP_STORE_APPLE_ID") + 1))
          if [ -z "$NEW_BUILD_NUMBER" ]; then
            echo "Missing build number!"
            exit 1
          fi

          cd $CM_BUILD_DIR/recipients_app
          echo "Change the build number in pubspec.yaml"
          sed -i '' -E "s/(version: [0-9]+\.[0-9]+\.[0-9]+\+)[0-9]+/\1$NEW_BUILD_NUMBER/" "./pubspec.yaml"
      - name: Load Firebase Options file
        script: |
          #!/usr/bin/env sh
          set -e # exit on first failed command

          cd $CM_BUILD_DIR/recipients_app/lib
          echo $FIREBASE_OPTIONS | base64 --decode > firebase_options_stage.dart
      - name: Load Firebase configuration
        script: |
          #!/usr/bin/env sh
          set -e # exit on first failed command

          cd $CM_BUILD_DIR/recipients_app/ios/Runner
          echo $IOS_FIREBASE_SECRET > GoogleService-Info.plist
      - name: Set up code signing settings on Xcode project
        script: |
          #!/usr/bin/env sh
          set -e # exit on first failed command

          xcode-project use-profiles \
            --archive-method=ad-hoc \
            --export-options-plist=$CM_BUILD_DIR/recipients_app/ios/export_options.plist

          # Print the export options plist
          more $CM_BUILD_DIR/recipients_app/ios/export_options.plist
      - *verify_flutter_version
      - name: Get Flutter packages & Install pods
        script: |
          #!/usr/bin/env sh
          set -e # exit on first failed command

          flutter pub get
          find . -name "Podfile" -execdir pod install \;
        working_directory: recipients_app
      - name: Flutter build ipa
        script: |
          #!/usr/bin/env sh
          set -e # exit on first failed command

          # Build the Flutter iOS app
          flutter build ipa --release \
            --flavor stage \
            -t lib/main_stage.dart \
            --dart-define=SURVEY_BASE_URL=$SURVEY_BASE_URL \
            --dart-define=SENTRY_URL=$SENTRY_URL \
            --dart-define=TWILIO_ACCOUNT_SID=$TWILIO_ACCOUNT_SID \
            --dart-define=TWILIO_AUTH_TOKEN=$TWILIO_AUTH_TOKEN \
            --dart-define=TWILIO_NUMBER=$TWILIO_NUMBER \
            --dart-define=TWILIO_SERVICE_SID=$TWILIO_SERVICE_SID \
            --export-options-plist=$CM_BUILD_DIR/recipients_app/ios/export_options.plist
        working_directory: recipients_app

    artifacts:
      - recipients_app/build/ios/ipa/*.ipa
      - /tmp/xcodebuild_logs/*.log

    publishing:
      # Publish to Firebase App Distribution
      firebase:
        firebase_service_account: $FIREBASE_APP_DISTRIBUTION_SERVICE_ACCOUNT
        ios:
          app_id: 1:51495651779:ios:d4d28e75065983fb185576
          groups:
            - internal-testers

      # Notifications
      email: # See the following link for details about email publishing - https://docs.codemagic.io/publishing-yaml/distribution/#email
        recipients:
          - sandino@socialincome.org
        notify:
          success: true # To receive a notification when a build succeeds
          failure: false # To not receive a notification when a build fails
      slack: # See the following link about how to connect your Slack account - https://docs.codemagic.io/publishing-yaml/distribution/#slack
        channel: $SLACK_CHANNEL_NAME
        notify_on_build_start: false
        notify:
          success: true # To receive a notification when a build succeeds
          failure: true # To not receive a notification when a build fails

  ios-production-workflow:
    name: iOS Production
    <<: *instance_mac_mini_m2

    integrations:
      app_store_connect: Social Income Recipient App

    environment:
      ios_signing:
        distribution_type: app_store
        bundle_identifier: org.socialincome.app
      groups:
        - slack
        - app-config-prod
      vars:
        APP_STORE_APPLE_ID: 6444860109 # Apple ID of Prod App "Social Income"
      <<: *env_versions

    cache:
      cache_paths:
        - $HOME/.pub-cache
        - $HOME/Library/Caches/CocoaPods

    scripts:
      - name: Set build number automatically from App Store Connect
        script: |
          #!/usr/bin/env sh
          set -e # exit on first failed command

          # Get the latest build number from Google Play and increment it by 1
          NEW_BUILD_NUMBER=$(($(app-store-connect get-latest-app-store-build-number "$APP_STORE_APPLE_ID") + 1))
          if [ -z "$NEW_BUILD_NUMBER" ]; then
            echo "Missing build number!"
            exit 1
          fi

          cd $CM_BUILD_DIR/recipients_app
          echo "Change the build number in pubspec.yaml"
          sed -i '' -E "s/(version: [0-9]+\.[0-9]+\.[0-9]+\+)[0-9]+/\1$NEW_BUILD_NUMBER/" "./pubspec.yaml"
      - name: Load Firebase Options file
        script: |
          #!/usr/bin/env sh
          set -e # exit on first failed command

          cd $CM_BUILD_DIR/recipients_app/lib
          echo $FIREBASE_OPTIONS | base64 --decode > firebase_options_prod.dart
      - name: Load Firebase configuration
        script: |
          #!/usr/bin/env sh
          set -e # exit on first failed command

          cd $CM_BUILD_DIR/recipients_app/ios/Runner
          echo $IOS_FIREBASE_SECRET > GoogleService-Info.plist
      - name: Set up code signing settings on Xcode project
        script: |
          #!/usr/bin/env sh
          set -e # exit on first failed command

          xcode-project use-profiles \
            --archive-method=app-store \
            --export-options-plist=$CM_BUILD_DIR/recipients_app/ios/export_options.plist

          # Print the export options plist
          more $CM_BUILD_DIR/recipients_app/ios/export_options.plist
      - *verify_flutter_version
      - name: Get Flutter packages & Install pods
        script: |
          #!/usr/bin/env sh
          set -e # exit on first failed command

          flutter pub get
          find . -name "Podfile" -execdir pod install \;
        working_directory: recipients_app
      - name: Flutter build ipa
        script: |
          #!/usr/bin/env sh
          set -e # exit on first failed command

          # Build the Flutter iOS app
          flutter build ipa --release \
            --flavor prod \
            -t lib/main_prod.dart \
            --dart-define=SURVEY_BASE_URL=$SURVEY_BASE_URL \
            --dart-define=SENTRY_URL=$SENTRY_URL \
            --dart-define=TWILIO_ACCOUNT_SID=$TWILIO_ACCOUNT_SID \
            --dart-define=TWILIO_AUTH_TOKEN=$TWILIO_AUTH_TOKEN \
            --dart-define=TWILIO_NUMBER=$TWILIO_NUMBER \
            --dart-define=TWILIO_SERVICE_SID=$TWILIO_SERVICE_SID \
            --export-options-plist=$CM_BUILD_DIR/recipients_app/ios/export_options.plist
        working_directory: recipients_app

    artifacts:
      - recipients_app/build/ios/ipa/*.ipa
      - /tmp/xcodebuild_logs/*.log

    publishing:
      # Publish to Apple's Testflight via AppStore Connect
      app_store_connect:
        # Use referenced App Store Connect API key from above to authenticate binary upload
        auth: integration
        # Whether or not to submit the uploaded build to TestFlight beta review.
        # Note: This action is performed during post-processing.
        submit_to_testflight: true

      # Notifications
      email: # See the following link for details about email publishing - https://docs.codemagic.io/publishing-yaml/distribution/#email
        recipients:
          - sandino@socialincome.org
        notify:
          success: true # To receive a notification when a build succeeds
          failure: false # To not receive a notification when a build fails
      slack: # See the following link about how to connect your Slack account - https://docs.codemagic.io/publishing-yaml/distribution/#slack
        channel: $SLACK_CHANNEL_NAME
        notify_on_build_start: false
        notify:
          success: true # To receive a notification when a build succeeds
          failure: true # To not receive a notification when a build fails
