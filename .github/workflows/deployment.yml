name: Deployment

on:
  workflow_call:
    inputs:
      component:
        description: The component to deploy (admin|functions|rules)
        type: string
        required: true
      project:
        description: The Firebase project to deploy to (social-income-staging|social-income-prod)
        type: string
        required: true

jobs:
  deploy-admin:
    name: Deploy admin on Firebase
    runs-on: ubuntu-latest
    if: inputs.component == 'admin'
    env:
      VITE_ADMIN_ALGOLIA_APPLICATION_ID: ${{ secrets.REACT_APP_ADMIN_ALGOLIA_APPLICATION_ID }}
      VITE_ADMIN_ALGOLIA_SEARCH_KEY: ${{ secrets.REACT_APP_ADMIN_ALGOLIA_SEARCH_KEY }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Initialize repository
        uses: ./.github/workflows/actions/init
        with:
          project: ${{ inputs.project }}
          firebaseServiceAccountJSON: ${{ (inputs.project == 'social-income-prod' && secrets.FIREBASE_SERVICE_ACCOUNT_SOCIAL_INCOME_PROD) || secrets.FIREBASE_SERVICE_ACCOUNT_SOCIAL_INCOME_STAGING }}

      - name: Build admin
        run: npm run admin:build

      - name: Deploy preview on Firebase (social-income-staging)
        if: ${{ inputs.project == 'social-income-staging' && github.ref != 'refs/heads/main' }}
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: "${{ secrets.GITHUB_TOKEN }}"
          firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT_SOCIAL_INCOME_STAGING }}"
          projectId: social-income-staging
          target: admin

      - name: Deploy on Firebase (social-income-staging)
        if: ${{ inputs.project == 'social-income-staging' && github.ref == 'refs/heads/main' }}
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: "${{ secrets.GITHUB_TOKEN }}"
          firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT_SOCIAL_INCOME_STAGING }}"
          projectId: social-income-staging
          target: admin
          channelId: live

      - name: Deploy on Firebase (social-income-prod)
        if: inputs.project == 'social-income-prod'
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: "${{ secrets.GITHUB_TOKEN }}"
          firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT_SOCIAL_INCOME_PROD }}"
          projectId: social-income-prod
          target: admin
          channelId: live

  deploy-functions:
    name: Deploy functions on Firebase
    runs-on: ubuntu-latest
    if: inputs.component == 'functions'
    env:
      POSTFINANCE_EMAIL_USER: ${{ secrets.POSTFINANCE_EMAIL_USER }}
      POSTFINANCE_EMAIL_PASSWORD: ${{ secrets.POSTFINANCE_EMAIL_PASSWORD }}
      STRIPE_API_READ_KEY: ${{ secrets.STRIPE_API_READ_KEY }}
      STRIPE_WEBHOOK_SECRET: ${{ secrets.STRIPE_WEBHOOK_SECRET }}
      NOTIFICATION_EMAIL_USER: ${{ secrets.NOTIFICATION_EMAIL_USER }}
      NOTIFICATION_EMAIL_PASSWORD: ${{ secrets.NOTIFICATION_EMAIL_PASSWORD }}
      NOTIFICATION_EMAIL_USER_KERRIN: ${{ secrets.NOTIFICATION_EMAIL_USER_KERRIN }}
      NOTIFICATION_EMAIL_PASSWORD_KERRIN: ${{ secrets.NOTIFICATION_EMAIL_PASSWORD_KERRIN }}
      TWILIO_SID: ${{ secrets.TWILIO_SID }}
      TWILIO_TOKEN: ${{ secrets.TWILIO_TOKEN }}
      TWILIO_SENDER_PHONE: ${{ secrets.TWILIO_SENDER_PHONE }}
      EXCHANGE_RATES_API: ${{ secrets.EXCHANGE_RATES_API }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Initialize repository
        uses: ./.github/workflows/actions/init
        with:
          project: ${{ inputs.project }}
          firebaseServiceAccountJSON: ${{ (inputs.project == 'social-income-prod' && secrets.FIREBASE_SERVICE_ACCOUNT_SOCIAL_INCOME_PROD) || secrets.FIREBASE_SERVICE_ACCOUNT_SOCIAL_INCOME_STAGING }}

      - name: Build functions
        run: npm run functions:build

      - name: Deploy on Firebase (${{ inputs.project }})
        run: GOOGLE_APPLICATION_CREDENTIALS=credentials.json firebase deploy --only functions --project ${{ inputs.project }}

  deploy-rules:
    name: Deploy rules on Firebase
    runs-on: ubuntu-latest
    if: inputs.component == 'rules'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Initialize repository
        uses: ./.github/workflows/actions/init
        with:
          installDependencies: "false"
          project: ${{ inputs.project }}
          firebaseServiceAccountJSON: ${{ (inputs.project == 'social-income-prod' && secrets.FIREBASE_SERVICE_ACCOUNT_SOCIAL_INCOME_PROD) || secrets.FIREBASE_SERVICE_ACCOUNT_SOCIAL_INCOME_STAGING }}

      - name: Deploy on Firebase (${{ inputs.project }})
        run: GOOGLE_APPLICATION_CREDENTIALS=credentials.json firebase deploy --only firestore:rules --project ${{ inputs.project }}

  deploy-website:
    name: Deploy website on Vercel
    runs-on: ubuntu-latest
    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Initialize Repository
        uses: ./.github/workflows/actions/init

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
