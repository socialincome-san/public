name: "Initialize Repository"
description: "Set up Node.js, plus installs firebase-tools and dependencies"

inputs:
  component:
    description: "The component to deploy (admin|functions)"
    required: true
  project:
    description: "The Firebase project to deploy to (social-income-staging|social-income-prod)"
    required: true

runs:
  using: "composite"
  steps:
    ### Admin deployment ###
    - name: Add secrets to admin/.env file
      if: ${{ inputs.component }} == "admin"
      shell: bash
      working-directory: admin
      run: |
        echo VITE_ADMIN_ALGOLIA_APPLICATION_ID=${{ secrets.REACT_APP_ADMIN_ALGOLIA_APPLICATION_ID }} >> .env
        echo VITE_ADMIN_ALGOLIA_SEARCH_KEY=${{ secrets.REACT_APP_ADMIN_ALGOLIA_SEARCH_KEY }} >> .env

    - name: Build admin
      if: ${{ inputs.component }} == "admin"
      shell: bash
      run: npm run admin:build

    - name: Deploy preview to social-income-staging Firebase project
      if: ${{ inputs.component }} == "admin" && ${{ inputs.project }} == "social-income-staging" && github.ref != 'refs/heads/main'
      uses: FirebaseExtended/action-hosting-deploy@v0
      with:
        repoToken: "${{ secrets.GITHUB_TOKEN }}"
        firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT_SOCIAL_INCOME_STAGING }}"
        projectId: social-income-staging
        target: admin

    - name: Deploy to social-income-staging Firebase project
      if: ${{ inputs.component }} == "admin" && ${{ inputs.project }} == "social-income-staging" && github.ref == 'refs/heads/main'
      uses: FirebaseExtended/action-hosting-deploy@v0
      with:
        repoToken: "${{ secrets.GITHUB_TOKEN }}"
        firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT_SOCIAL_INCOME_STAGING }}"
        projectId: social-income-staging
        target: admin
        channelId: live

    - name: Deploy to social-income-prod Firebase project
      if: ${{ inputs.component }} == "admin" && ${{ inputs.project }} == "social-income-prod"
      uses: FirebaseExtended/action-hosting-deploy@v0
      with:
        repoToken: "${{ secrets.GITHUB_TOKEN }}"
        firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT_SOCIAL_INCOME_PROD }}"
        projectId: social-income-prod
        target: admin
        channelId: live

    ### Functions deployment ###
    - name: Add secrets to functions/.env file
      if: ${{ inputs.component }} == "functions"
      working-directory: functions
      shell: bash
      run: |
        echo POSTFINANCE_EMAIL_USER=${{ secrets.POSTFINANCE_EMAIL_USER }} > .env
        echo POSTFINANCE_EMAIL_PASSWORD=${{ secrets.POSTFINANCE_EMAIL_PASSWORD }} >> .env
        echo STRIPE_API_READ_KEY=${{ secrets.STRIPE_API_READ_KEY }} >> .env
        echo STRIPE_WEBHOOK_SECRET=${{ secrets.STRIPE_WEBHOOK_SECRET }} >> .env
        echo NOTIFICATION_EMAIL_USER=${{ secrets.NOTIFICATION_EMAIL_USER }} >> .env
        echo NOTIFICATION_EMAIL_PASSWORD=${{ secrets.NOTIFICATION_EMAIL_PASSWORD }} >> .env
        echo NOTIFICATION_EMAIL_USER_KERRIN=${{ secrets.NOTIFICATION_EMAIL_USER_KERRIN }} >> .env
        echo NOTIFICATION_EMAIL_PASSWORD_KERRIN=${{ secrets.NOTIFICATION_EMAIL_PASSWORD_KERRIN }} >> .env
        echo TWILIO_SID=${{ secrets.TWILIO_SID }} >> .env
        echo TWILIO_TOKEN=${{ secrets.TWILIO_TOKEN }} >> .env
        echo TWILIO_SENDER_PHONE=${{ secrets.TWILIO_SENDER_PHONE }} >> .env
        echo EXCHANGE_RATES_API=${{ secrets.EXCHANGE_RATES_API }} >> .env

    - name: Create staging credentials JSON file
      if: ${{ inputs.component }} == "functions" && ${{ inputs.project }} == "social-income-staging"
      uses: jsdaniell/create-json@v1.2.2
      with:
        name: credentials.json
        json: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_SOCIAL_INCOME_STAGING }}

    - name: Create production credentials JSON file
      if: ${{ inputs.component }} == "functions" && ${{ inputs.project }} == "social-income-prod"
      uses: jsdaniell/create-json@v1.2.2
      with:
        name: credentials.json
        json: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_SOCIAL_INCOME_PROD }}

    - name: Build functions
      if: ${{ inputs.component }} == "functions"
      shell: bash
      run: npm run functions:build

    - name: Deploy to ${{ inputs.project }} Firebase project
      if: ${{ inputs.component }} == "functions"
      shell: bash
      run: GOOGLE_APPLICATION_CREDENTIALS=credentials.json firebase deploy --only functions --project ${{ inputs.project }}
