name: Build and Deploy Portal to GCP via Terraform

on:
  push:
    branches:
      - feat/gcp-poc
      - feat/gcp-poc-with-website

env:
  ENVIRONMENT: staging
  APP_NAME: portal
  GCP_PROJECT_ID: social-income-poc
  GCP_REGION: europe-west6
  ARTIFACT_REGISTRY_NAME: staging-portal-google-artifact-registry-repository
  TERRAFORM_DIR: portal/infra

jobs:
  deploy:
    name: Build and Deploy Portal to GCP via Terraform
    runs-on: ubuntu-latest

    steps:
      - name: 📦 Checkout repository
        uses: actions/checkout@v3

      - name: 🛠 Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22
      #      - name: 📥 Install monorepo dependencies
      #        run: npm ci
      #
      #      - name: 🧹 Lint
      #        run: npm run portal:lint

      - name: 🔐 Authenticate with Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.TF_STAGING_TERRAFORM_DEPLOYER_CREDENTIALS }}

      - name: ⚙️ Configure Docker to use Artifact Registry
        run: |
          echo "🛠 Configuring Docker authentication for Artifact Registry"
          gcloud auth configure-docker $GCP_REGION-docker.pkg.dev --quiet

      - name: 🧰 Set up Terraform CLI
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.6

      - name: 🔁 Build Image & Deploy to Cloud Run via Terraform
        env:
          TF_VAR_env: ${{ env.ENVIRONMENT }}
          TF_VAR_app_name: ${{ env.APP_NAME }}
          TF_VAR_gcp_project_id: ${{ env.GCP_PROJECT_ID }}
          TF_VAR_gcp_region: ${{ env.GCP_REGION }}
          TF_VAR_google_sql_db_password: ${{ secrets.TF_STAGING_GOOGLE_SQL_DB_PASSWORD }}
          TF_VAR_next_public_firebase_app_id: ${{ secrets.TF_STAGING_NEXT_PUBLIC_FIREBASE_APP_ID }}
          TF_VAR_next_public_firebase_measurement_id: ${{ secrets.TF_STAGING_NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID }}
          TF_VAR_next_public_firebase_messaging_sender_id: ${{ secrets.TF_STAGING_NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}
          TF_VAR_next_public_firebase_storage_bucket: ${{ secrets.TF_STAGING_NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}
          TF_VAR_firebase_database_url: ${{ secrets.TF_STAGING_FIREBASE_DATABASE_URL }}
          TF_VAR_firebase_service_account_json: ${{ secrets.TF_STAGING_FIREBASE_SERVICE_ACCOUNT_JSON }}
          TF_VAR_next_public_firebase_api_key: ${{ secrets.TF_STAGING_NEXT_PUBLIC_FIREBASE_API_KEY }}
          TF_VAR_next_public_firebase_auth_domain: ${{ secrets.TF_STAGING_NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}
          TF_VAR_next_public_firebase_project_id: ${{ secrets.TF_STAGING_NEXT_PUBLIC_FIREBASE_PROJECT_ID }}

        run: |
          echo "🧠 Generating image tag from Git SHA..."
          SHORT_SHA=${GITHUB_SHA::7}
          IMAGE_URL="$GCP_REGION-docker.pkg.dev/$GCP_PROJECT_ID/$ARTIFACT_REGISTRY_NAME/$APP_NAME:$SHORT_SHA"

          echo "📤 Building Docker image: $IMAGE_URL"
          docker buildx build \
            --platform linux/amd64 \
            --tag "$IMAGE_URL" \
            --push \
            -f portal/Dockerfile \
            .

          echo "🚀 Image built and pushed."

          echo "🧭 Initializing Terraform..."
          terraform -chdir=${{ env.TERRAFORM_DIR }} init -backend-config="_staging.tfbackend"

          echo "🧪 Running terraform fmt check..."
          terraform -chdir=${{ env.TERRAFORM_DIR }} fmt -check

          echo "🧪 Validating Terraform..."
          terraform -chdir=${{ env.TERRAFORM_DIR }} validate

          echo "🚀 Applying Terraform..."
          terraform -chdir=${{ env.TERRAFORM_DIR }} apply -auto-approve -input=false \
            -var="docker_image_url=$IMAGE_URL"

          echo "✅ Terraform applied successfully."

      - name: 🌍 Print Cloud Run URL
        run: |
          echo "Fetching Cloud Run URL from Terraform output..."
          CLOUD_RUN_URL=$(terraform -chdir=${{ env.TERRAFORM_DIR }} output -raw cloud_run_url)
          
          echo "✅ Your app is live at:"
          echo "$CLOUD_RUN_URL"

          echo "### 🚀 Cloud Run deployed to: [$CLOUD_RUN_URL]($CLOUD_RUN_URL)" >> $GITHUB_STEP_SUMMARY