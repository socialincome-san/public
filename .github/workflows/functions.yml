name: Functions
on:
  pull_request:
  push:
    branches:
      - main

jobs:
  check_applicability:
    name: Check Applicability
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@v5
        with:
          paths: '["functions/**", "shared/**", ".github/workflows/functions.yml"]'
          skip_after_successful_duplicate: "false"

  test_deploy:
    name: Test & Deploy Functions
    needs: check_applicability
    if: needs.check_applicability.outputs.should_skip != 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Install & Setup Firebase Emulator Suite
        run: |
          npm -g install firebase-tools@11.29.1 && \
          firebase setup:emulators:firestore && \
          firebase setup:emulators:ui

      - name: Install Dependencies
        run: npm ci

      - name: Add test secrets to env file
        working-directory: functions
        run: |
          echo TWILIO_SID=${{ secrets.TWILIO_TEST_SID }} > .env
          echo TWILIO_TOKEN=${{ secrets.TWILIO_TEST_TOKEN }} >> .env
          echo TWILIO_SENDER_PHONE=${{ secrets.TWILIO_TEST_SENDER_PHONE }} >> .env

      - name: Run Tests
        run: npm run functions:test

      - name: Run Playwright Tests
        run: npm run functions:test:playwright

      - name: Deploy Playwright Report to GitHub Pages
        uses: rossjrw/pr-preview-action@v1
        if: always()
        with:
          source-dir: functions/playwright-report/
          preview-branch: gh-pages
          umbrella-dir: functions-playwright-report
          action: auto

      - name: Build
        run: npm run functions:build

      - name: Add secrets to env file
        if: github.ref == 'refs/heads/main'
        working-directory: functions
        run: |
          echo POSTFINANCE_EMAIL_USER=${{ secrets.POSTFINANCE_EMAIL_USER }} > .env
          echo POSTFINANCE_EMAIL_PASSWORD=${{ secrets.POSTFINANCE_EMAIL_PASSWORD }} >> .env
          echo STRIPE_API_READ_KEY=${{ secrets.STRIPE_API_READ_KEY }} >> .env
          echo STRIPE_WEBHOOK_SECRET=${{ secrets.STRIPE_WEBHOOK_SECRET }} >> .env
          echo NOTIFICATION_EMAIL_USER=${{ secrets.NOTIFICATION_EMAIL_USER }} >> .env
          echo NOTIFICATION_EMAIL_PASSWORD=${{ secrets.NOTIFICATION_EMAIL_PASSWORD }} >> .env
          echo NOTIFICATION_EMAIL_USER_KERRIN=${{ secrets.NOTIFICATION_EMAIL_USER_KERRIN }} >> .env
          echo NOTIFICATION_EMAIL_PASSWORD_KERRIN=${{ secrets.NOTIFICATION_EMAIL_PASSWORD_KERRIN }} >> .env
          echo TWILIO_SID=${{ secrets.TWILIO_SID }} >> .env
          echo TWILIO_TOKEN=${{ secrets.TWILIO_TOKEN }} >> .env
          echo TWILIO_SENDER_PHONE=${{ secrets.TWILIO_SENDER_PHONE }} >> .env
          echo EXCHANGE_RATES_API=${{ secrets.EXCHANGE_RATES_API }} >> .env

      - name: Create service account key
        if: github.ref == 'refs/heads/main'
        run: echo ${{ secrets.FIREBASE_SERVICE_ACCOUNT_SOCIAL_INCOME_STAGING }} > secret.json

      - name: Deploy social-income-staging Firebase Project
        if: github.ref == 'refs/heads/main'
        run: GOOGLE_APPLICATION_CREDENTIALS=secret.json firebase deploy --only functions --project social-income-staging --json
